{"version":3,"sources":["AnimationGroup.tsx","vendor/rough/src/generator-base.ts","vendor/rough/src/path.ts","vendor/rough/src/geometry.ts","vendor/rough/src/utils/hachure.ts","vendor/rough/src/fillers/filler-utils.ts","vendor/rough/src/fillers/hachure-filler.ts","vendor/rough/src/fillers/zigzag-filler.ts","vendor/rough/src/fillers/hatch-filler.ts","vendor/rough/src/fillers/dot-filler.ts","vendor/rough/src/fillers/filler.ts","vendor/rough/src/renderer.ts","vendor/rough/src/generator.ts","vendor/rough/src/canvas-base.ts","vendor/rough/src/canvas.ts","vendor/rough/src/svg-base.ts","vendor/rough/src/svg.ts","vendor/rough/src/wrappers/rough.ts","_LineDrawing.tsx","_RoughLine.tsx","_isIE.ts","_MeasureLines.tsx","RoughUnderline.tsx","_RoughEllipse.tsx","RoughCircledBox.tsx","_RoughRectangle.tsx","RoughHighlight.tsx","AnimatedLineDrawing.tsx","_App.tsx","index.tsx"],"names":["AnimationGroupContext","React","ConnectToAnimationGroup","Consumer","AnimationGroup","_React$Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","_pending","_animating","_triggered","register","component","indexOf","toConsumableArray","setTimeout","_maybeAdvanceAnimation","unregister","filter","c","props","paused","some","estimatedDuration","nextComponent","map","domNode","ReactDOM","findDOMNode","Element","Error","sort","a","b","compareDocumentPosition","trigger","_handleAnimationComplete","inherits","createClass","key","value","prevProps","children","react","Provider","hasSelf","self","RoughGeneratorBase","config","surface","defaultOptions","maxRandomnessOffset","roughness","bowing","stroke","strokeWidth","curveTightness","curveStepCount","fillStyle","fillWeight","hachureAngle","hachureGap","options","_options","assign","shape","sets","val","w","baseVal","width","height","points","left","right","top","bottom","i","Math","min","max","d","size","document","ns","svg","createElementNS","setAttribute","pathNode","appendChild","body","bb","getBBox","removeChild","err","canvasSize","getCanvasSize","drawable","o","paths","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","drawing","path","type","opsToPath","fill","fillSketch","pattern","x","y","viewBox","round","patternUnits","push","return","fweight","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","ops","item","data","op","trim","isType","token","PARAMS","A","C","H","h","L","l","M","m","Q","q","S","s","T","t","V","v","Z","z","ParsedPath","COMMAND","NUMBER","EOD","_closed","segments","parseData","processPoints","tokens","match","substr","RegExp","$1","text","console","error","parseFloat","tokenize","index","mode","param_length","params","numbeToken","segment","first","currentPoint","point","toLowerCase","RoughPath","parsed","_position","_first","_linearPoints","bezierReflectionPoint","quadReflectionPoint","get","closed","lp","set","RoughArcConverter","from","to","radii","angle","largeArcFlag","sweepFlag","_segIndex","_numSegs","_rx","_ry","_sinPhi","_cosPhi","_C","_theta","_delta","_T","_from","radPerDeg","PI","abs","sin","cos","x1dash","y1dash","root","numerator","sqrt","cxdash","cydash","calculateVectorAngle","dtheta","ceil","cosTheta1","sinTheta1","theta2","cosTheta2","sinTheta2","cp1","cp2","ux","uy","vx","vy","ta","atan2","tb","PathFitter","simplification","outSets","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","estLength","floor","reduce","_i","p1","p2","pow","count","slice","areas","minArea","minIndex","distance","area","splice","Segment","px1","px2","py1","py2","xi","Number","MAX_VALUE","yi","_undefined","otherSegment","isUndefined","grad1","grad2","int1","int2","HachureIterator","gap","sinAngle","cosAngle","tanAngle","pos","deltaX","hGap","sLeft","sRight","line","xLower","xUpper","yLower","yUpper","intersects","lineLength","getIntersectingLines","intersections","s1","s2","affine","cx","cy","sinAnglePrime","cosAnglePrime","R","hachureLinesForPolygon","ret","rect","tan","it","nextLine","lines","hachureLinesForEllipse","helper","rx","ry","randOffset","aspectRatio","hyp","gapPrime","halfLen","xPos","HachureFiller","_fillPolygon","_fillEllipse","connectEnds","renderLines","prevPoint","doubleLineOps","ZigZagFiller","_HachureFiller","HatchFiller","o2","set2","DotFiller","dotsOnLines","dl","alpha","atan","dy","dx","randOffsetWithRange","el","ellipse","fillers","getFiller","fillerName","_offsetOpt","_offset","x1","y1","x2","y2","_doubleLine","linearPath","close","len","rectangle","polygon","curve","o1","_curveWithOffset","increment","_ellipse","arc","start","stop","roughClosure","strt","stp","ellipseInc","arcInc","_arc","solidFillPolygon","offset","patternFillPolygon","fillPolygon","random","_line","move","overlay","lengthSq","halfOffset","divergePoint","midDispX","midDispY","randomHalf","randomFull","ps","_curve","closePoint","cachedVertArray","ro","overlap","radOffset","_bezierTo","ros","f","setPosition","_processSegment","seg","prevSeg","delta","ob","prevKey","ref","offset1","offset2","arcConverter","getNextSegment","RoughGenerator","_RoughGeneratorBase","_drawable","fillEllipse","patternFillEllipse","diameter","patternFillArc","computePolygonSize","polygonPath","computePathSize","replace","p","linearPoints","fit","opList","svgPath","hasDocument","RoughCanvas","_RoughCanvasBase","canvas","gen","draw","circle","RoughCanvasBase","ctx","getContext","getDefaultOptions","save","strokeStyle","lineWidth","_drawToContext","restore","p2d","Path2D","doc","ownerDocument","hcanvas","createElement","hcontext","bbox","computeBBox","translate","createPattern","beginPath","moveTo","bezierCurveTo","quadraticCurveTo","lineTo","RoughSVG","_RoughSVGBase","RoughSVGBase","_defs","window","g","style","defs","id","MAX_SAFE_INTEGER","patternPath","dnode","firstChild","insertBefore","rough","generator","InternalLineDrawing","state","pathLengths","uniqueId","_this$props","title","delay","duration","pathStyle","consistentDirection","className","delayRatio","desc","bare","pathClassName","_this$state","durationMultiplier","contents","objectSpread","strokeDasharray","strokeDashoffset","animationDelay","animationDuration","css","styles","animatedLine","absoluteOverlay","preserveAspectRatio","aria-hidden","aria-labelledby","setState","pathEl","split","pathD","getTotalLength","StyleSheet","create","animationName","animationTimingFunction","animationFillMode","animationEasingFunction","overflow","position","pointerEvents","RoughLine","_reset","roughJsOptions","objectWithoutProperties","isNaN","roughG","_this$props2","_LineDrawing_InternalLineDrawing","_this$props3","isIE","ua","navigator","userAgent","msie","trident","MeasureLines","_nodes","_interval","_this2","setInterval","lineByBottom","memo","node","_node$getBoundingClie","getBoundingClientRect","offsetLeft","offsetTop","Infinity","lineBottoms","keys","idx","clearInterval","_this3","nodes","forEach","child","word","fragments","_RoughUnderline","triggered","group","animation","roughStyle","_MeasureLines_MeasureLines","durations","totalLength","animateTime","speed","timeSoFar","delays","myDelay","_ref","amount","ratio","_RoughLine_RoughLine","lift","RoughUnderline","_React$Component2","RoughUnderline_RoughUnderline","RoughEllipse","_RoughCircledBox","NaN","marginLeft","marginRight","marginTop","marginBottom","_node","element","boundingRect","roots","getRoots","getEllipseBoundingRectangle","paragraph","_RoughEllipse_RoughEllipse","display","RoughCircledBox","RoughCircledBox_RoughCircledBox","RoughRectangle","_svg","querySelector","getAttribute","name","toUpperCase","transformOrigin","transform","animatedFill","animatedStroke","newProps","newState","_this$props4","_RoughHighlight","_RoughRectangle_RoughRectangle","RoughHighlight","RoughHighlight_RoughHighlight","_AnimatedLineDrawing","tempDiv","tempSvg","parseInt","String","_paths$reduce","AnimatedLineDrawing","AnimatedLineDrawing_AnimatedLineDrawing","fastAnimation","slowAnimation","underlineStyle","linkStyle","roughCircledBoxStyle","highlightStyle","Logo","react_default","logo","src_AnimatedLineDrawing_AnimatedLineDrawing","strokeLinejoin","strokeLinecap","logoPath","MyLink","href","link","src_RoughUnderline_RoughUnderline","MyHighlight","_ref2","src_RoughHighlight_RoughHighlight","MyUnderline","_ref3","App","AnimationGroup_AnimationGroup","pageContainer","_App_Logo","_App_MyHighlight","_App_MyUnderline","_App_MyLink","moreOptions","onClick","src_RoughCircledBox_RoughCircledBox","Component","maxWidth","margin","fontFamily","color","paddingBottom","fontSize","lineHeight","verticalAlign","defineProperty","textDecoration","render","_App","getElementById"],"mappings":"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","file":"static/js/main.f9e860df.chunk.js","sourcesContent":["import * as React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nconst AnimationGroupContext = React.createContext(\n    null as (null | AnimationGroup),\n);\n\n/**\n * Pass a parent or grand-parent [[AnimationGroup]] to the child.\n *\n * Components that implement [[Animate]] can use this to get access to an\n * [[AnimationGroup]] that they are rendered inside.\n *\n * If there is no such [[AnimationGroup]], this component passes `null`\n * instead.\n *\n * Example use:\n * ```\n * <ConnectToAnimationGroup>\n *     {group => <AnimatedLineDrawing group={group} {...props} />}\n * </ConnectToAnimationGroup>\n * ```\n */\nexport const ConnectToAnimationGroup = AnimationGroupContext.Consumer;\n\nexport interface AnimateProps {\n    /**\n     * The group this animation is in, or `null` if the animation should\n     * happen immediately.\n     */\n    group: AnimationGroup | null;\n}\n\n/**\n * A component that [[AnimationGroup]] can animate.\n *\n * This component gets access to the AnimationGroup via the\n * `<ConnectToAnimationGroup />` HOC and must:\n *  - call `group.register(this)` in componentDidMount()\n *  - call `group.unregister(this)` in componentWillUnmount()\n *  - call `group.register(this)` whenever `estimatedDuration` changes.\n *  - in componentDidUpdate, if the group changed, unregister from the old\n *    group, and register into the new group.\n *\n * If no group was passed into an Animate, it should be animated\n * immediately.\n *\n * @noInheritDoc\n */\nexport interface Animate extends React.Component<AnimateProps> {\n    /**\n     * The estimated duration of the animation this component can provide, or\n     * null if the component is not yet ready to animate.\n     *\n     * If the `estimatedDuration` of any child Animate is `null`, nothing\n     * will be animated until every `estimatedDuration` is set.\n     */\n    estimatedDuration: number | null;\n\n    /**\n     * [[AnimationGroup]] calls this when the component should start its\n     * animation.\n     */\n    trigger: () => void;\n}\n\n/**\n * Props for [[AnimationGroup]]\n */\nexport interface AnimationGroupProps {\n    /**\n     * If true, the animation will not advance to the next step.\n     */\n    paused?: boolean;\n\n    /**\n     * Rendered untouched.\n     *\n     * Children and their decendents will be able to use\n     * [[ConnectToAnimationGroup]] to get access to this\n     * [[AnimationGroup]].\n     */\n    children: React.ReactNode;\n}\n\n/**\n * Make child [[Animate]] components animate *one by one* instead of\n * *all at once*.\n *\n * Any [[Animate]] components underneath an **AnimationGroup** will have\n * their animations triggered in DOM order (i.e., the order they appear in\n * your browser's HTML inspector devtool tab).\n *\n * **Props**: [[AnimationGroupProps]]\n *\n * ## Basic use\n *\n * [[RoughUnderline]], [[RoughHighlight]], [[RoughCircledBox]], and\n * [[AnimatedLineDrawing]] implement [[Animate]]. Placing these components\n * underneath an **AnimationGroup** will make them animate one by one.\n *\n * In the following example, the underline for \"dolor sit amet\" would be\n * animated, and then the underline for \"legere dicunt.\" would be animated.\n * Without **AnimationGroup**, both animations would happen at the same time.\n *\n * ```\n * import {AnimationGroup, RoughUnderline} from \"@khanacademy/khannotations\";\n *\n * // ...\n *\n * <AnimationGroup>\n *     Lorem ipsum{\" \"}\n *     <RoughUnderline\n *         animation={speedAnimation}\n *         roughStyle={testStyle}\n *     >\n *         dolor sit amet\n *     </RoughUnderline>\n *     , has solet qualisque ex, an nam tantas{\" \"}\n *     <RoughUnderline\n *         animation={speedAnimation}\n *         roughStyle={testStyle}\n *     >\n *         legere dicunt.\n *     </RoughUnderline>\n * </AnimationGroup>\n * ```\n *\n * Because **AnimationGroup** uses React Context, [[RoughUnderline]] doesn't\n * need to be a direct child of AnimationGroup. For example, this would also\n * work:\n *\n * ```\n * import {AnimationGroup, RoughUnderline} from \"@khanacademy/khannotations\";\n *\n * // ...\n *\n * const Dolor = () => (\n *     <RoughUnderline\n *         animation={speedAnimaiton}\n *         roughStyle={testStyle}\n *     >\n *         dolor sit amet\n *     </RoughUnderline>\n * );\n *\n *\n * // ...\n *\n * <AnimationGroup>\n *     <Dolor />\n *     <Dolor />\n * </AnimationGroup>\n * ```\n *\n * ## Pausing\n *\n * An **AnimationGroup** can be paused by setting `paused={true}`. When a\n * group is paused, the group will not advance to the next animation. This\n * could be used, for example, to not render annotations until the user has\n * scrolled to them.\n *\n * ## Making custom [[Animate]] components\n *\n * You can add your own animated components to an AnimationGroup.\n *\n * First, the component you want to add to an animated group needs to implement\n * the [[Animate]] interface.\n *\n * Then, you need to pass it an instance of an AnimationGroup. This can be\n * done via the [[ConnectToAnimationGroup]] component:\n *\n * ```\n * import {ConnectToAnimationGroup} from \"@khanacademy/khannotations\";\n *\n * // ...\n *\n * const ConnectedCustomComponent = (props: Props) => (\n *     <ConnectToAnimationGroup>\n *         {group => <CustomComponent group={group} {...props} />}\n *     </ConnectToAnimationGroup>\n * );\n * ```\n *\n * @noInheritDoc\n */\nexport class AnimationGroup extends React.Component<AnimationGroupProps> {\n    /// Animates that have not been triggered yet.\n    private _pending: Array<Animate> = [];\n    /// The Animate that is currently animating.\n    private _animating: Animate | null = null;\n    /// Animates that have been triggered. Includes _animating.\n    private _triggered: Array<Animate> = [];\n\n    /**\n     * Called when an [[Animate]] component is mounted, when the\n     * AnimationGroup for that component changes, or when the estimated\n     * duration changes.\n     *\n     * [[Animate]] components must call this according to the rules set out\n     * in the documentation for [[Animate]].\n     */\n    register = (component: Animate) => {\n        if (this._triggered.indexOf(component) > -1) {\n            return;\n        }\n\n        if (this._pending.indexOf(component) === -1) {\n            this._pending = [...this._pending, component];\n        }\n        setTimeout(this._maybeAdvanceAnimation, 0);\n    };\n\n    /**\n     * Called when an [[Animate]] component is unmounted, or when the\n     * AnimationGroup for that [[Animate]] changes.\n     *\n     * [[Animate]] components must call this according to the rules set out\n     * in the documentation for [[Animate]].\n     */\n    unregister = (component: Animate) => {\n        this._pending = this._pending.filter(c => c !== component);\n        this._triggered = this._triggered.filter(c => c !== component);\n        this._animating =\n            this._animating === component ? null : this._animating;\n        setTimeout(this._maybeAdvanceAnimation, 0);\n    };\n\n    /// Start the next animation, if we're ready.\n    ///\n    /// We're ready if nothing is being animated, all child Animates\n    /// have estimated durations, and we're not paused.\n    private _maybeAdvanceAnimation = () => {\n        if (this.props.paused) {\n            return;\n        }\n\n        if (this._animating) {\n            return;\n        }\n        if (this._pending.some(c => c.estimatedDuration === null)) {\n            // Wait until all components are estimated.\n            return;\n        }\n\n        let components = this._pending.map(c => {\n            let domNode = ReactDOM.findDOMNode(c);\n            if (!(domNode instanceof Element)) {\n                throw new Error(\"Animate components must render Elements.\");\n            }\n            return [domNode, c] as [Element, Animate];\n        });\n\n        let nextComponent = components.sort(function(a, b) {\n            if (a[0] === b[0]) return 0;\n            if (a[0].compareDocumentPosition(b[0]) & 2) {\n                // b comes before a\n                return 1;\n            }\n            return -1;\n        })[0];\n\n        if (nextComponent) {\n            this._animating = nextComponent[1];\n            this._pending = this._pending.filter(c => c !== this._animating);\n            this._triggered = [...this._triggered, nextComponent[1]];\n            nextComponent[1].trigger();\n            setTimeout(\n                this._handleAnimationComplete,\n                nextComponent[1].estimatedDuration || 0,\n            );\n        }\n    };\n\n    /// Mark the current animation as completed, and go to the next one if\n    /// we're ready.\n    private _handleAnimationComplete = () => {\n        this._animating = null;\n        setTimeout(this._maybeAdvanceAnimation, 0);\n    };\n\n    /** @hidden */\n    componentDidUpdate(prevProps: AnimationGroupProps) {\n        if (!this.props.paused && prevProps.paused) {\n            setTimeout(this._maybeAdvanceAnimation, 0);\n        }\n    }\n\n    /** @hidden */\n    render() {\n        const {children} = this.props;\n\n        return (\n            <AnimationGroupContext.Provider value={this}>\n                {children}\n            </AnimationGroupContext.Provider>\n        );\n    }\n}\n","import { Config, DrawingSurface, Options, ResolvedOptions, Drawable, OpSet, PathInfo, PatternInfo } from './core';\nimport { Point } from './geometry.js';\n\nconst hasSelf = typeof self !== 'undefined';\n\nexport abstract class RoughGeneratorBase {\n  protected config: Config;\n  protected surface: DrawingSurface;\n\n  defaultOptions: ResolvedOptions = {\n    maxRandomnessOffset: 2,\n    roughness: 1,\n    bowing: 1,\n    stroke: '#000',\n    strokeWidth: 1,\n    curveTightness: 0,\n    curveStepCount: 9,\n    fillStyle: 'hachure',\n    fillWeight: -1,\n    hachureAngle: -41,\n    hachureGap: -1\n  };\n\n  constructor(config: Config | null, surface: DrawingSurface) {\n    this.config = config || {};\n    this.surface = surface;\n    if (this.config.options) {\n      this.defaultOptions = this._options(this.config.options);\n    }\n  }\n\n  protected _options(options?: Options): ResolvedOptions {\n    return options ? Object.assign({}, this.defaultOptions, options) : this.defaultOptions;\n  }\n\n  protected _drawable(shape: string, sets: OpSet[], options: ResolvedOptions): Drawable {\n    return { shape, sets: sets || [], options: options || this.defaultOptions };\n  }\n\n  private getCanvasSize(): Point {\n    const val = (w: any): number => {\n      if (w && typeof w === 'object') {\n        if (w.baseVal && w.baseVal.value) {\n          return w.baseVal.value;\n        }\n      }\n      return w || 100;\n    };\n    if (this.surface) {\n      return [val(this.surface.width), val(this.surface.height)];\n    }\n    return [100, 100];\n  }\n\n  protected computePolygonSize(points: Point[]): Point {\n    if (points.length) {\n      let left = points[0][0];\n      let right = points[0][0];\n      let top = points[0][1];\n      let bottom = points[0][1];\n      for (let i = 1; i < points.length; i++) {\n        left = Math.min(left, points[i][0]);\n        right = Math.max(right, points[i][0]);\n        top = Math.min(top, points[i][1]);\n        bottom = Math.max(bottom, points[i][1]);\n      }\n      return [(right - left), (bottom - top)];\n    }\n    return [0, 0];\n  }\n\n  protected polygonPath(points: Point[]): string {\n    let d = '';\n    if (points.length) {\n      d = `M${points[0][0]},${points[0][1]}`;\n      for (let i = 1; i < points.length; i++) {\n        d = `${d} L${points[i][0]},${points[i][1]}`;\n      }\n    }\n    return d;\n  }\n\n  protected computePathSize(d: string): Point {\n    let size: Point = [0, 0];\n    if (hasSelf && self.document) {\n      try {\n        const ns = 'http://www.w3.org/2000/svg';\n        const svg = self.document.createElementNS(ns, 'svg');\n        svg.setAttribute('width', '0');\n        svg.setAttribute('height', '0');\n        const pathNode = self.document.createElementNS(ns, 'path');\n        pathNode.setAttribute('d', d);\n        svg.appendChild(pathNode);\n        self.document.body.appendChild(svg);\n        const bb = pathNode.getBBox();\n        if (bb) {\n          size[0] = bb.width || 0;\n          size[1] = bb.height || 0;\n        }\n        self.document.body.removeChild(svg);\n      } catch (err) { }\n    }\n    const canvasSize = this.getCanvasSize();\n    if (!(size[0] * size[1])) {\n      size = canvasSize;\n    }\n    return size;\n  }\n\n  toPaths(drawable: Drawable): PathInfo[] {\n    const sets = drawable.sets || [];\n    const o = drawable.options || this.defaultOptions;\n    const paths: PathInfo[] = [];\n    for (const drawing of sets) {\n      let path: PathInfo | null = null;\n      switch (drawing.type) {\n        case 'path':\n          path = {\n            d: this.opsToPath(drawing),\n            stroke: o.stroke,\n            strokeWidth: o.strokeWidth,\n            fill: 'none'\n          };\n          break;\n        case 'fillPath':\n          path = {\n            d: this.opsToPath(drawing),\n            stroke: 'none',\n            strokeWidth: 0,\n            fill: o.fill || 'none'\n          };\n          break;\n        case 'fillSketch':\n          path = this.fillSketch(drawing, o);\n          break;\n        case 'path2Dfill':\n          path = {\n            d: drawing.path || '',\n            stroke: 'none',\n            strokeWidth: 0,\n            fill: o.fill || 'none'\n          };\n          break;\n        case 'path2Dpattern': {\n          const size = drawing.size!;\n          const pattern: PatternInfo = {\n            x: 0, y: 0, width: 1, height: 1,\n            viewBox: `0 0 ${Math.round(size[0])} ${Math.round(size[1])}`,\n            patternUnits: 'objectBoundingBox',\n            path: this.fillSketch(drawing, o)\n          };\n          path = {\n            d: drawing.path!,\n            stroke: 'none',\n            strokeWidth: 0,\n            pattern: pattern\n          };\n          break;\n        }\n      }\n      if (path) {\n        paths.push(path);\n      }\n    }\n    return paths;\n  }\n\n  private fillSketch(drawing: OpSet, o: ResolvedOptions): PathInfo {\n    let fweight = o.fillWeight;\n    if (fweight < 0) {\n      fweight = o.strokeWidth / 2;\n    }\n    return {\n      d: this.opsToPath(drawing),\n      stroke: o.fill || 'none',\n      strokeWidth: fweight,\n      fill: 'none'\n    };\n  }\n\n  opsToPath(drawing: OpSet): string {\n    let path = '';\n    for (const item of drawing.ops) {\n      const data = item.data;\n      switch (item.op) {\n        case 'move':\n          path += `M${data[0]} ${data[1]} `;\n          break;\n        case 'bcurveTo':\n          path += `C${data[0]} ${data[1]}, ${data[2]} ${data[3]}, ${data[4]} ${data[5]} `;\n          break;\n        case 'qcurveTo':\n          path += `Q${data[0]} ${data[1]}, ${data[2]} ${data[3]} `;\n          break;\n        case 'lineTo':\n          path += `L${data[0]} ${data[1]} `;\n          break;\n      }\n    }\n    return path.trim();\n  }\n}","import { Point } from './geometry';\n\ninterface PathToken {\n  type: number;\n  text: string;\n}\n\nfunction isType(token: PathToken, type: number) {\n  return token.type === type;\n}\n\nexport interface Segment {\n  key: string;\n  data: number[];\n  point?: Point;\n}\n\nconst PARAMS: { [key: string]: number } = {\n  A: 7,\n  a: 7,\n  C: 6,\n  c: 6,\n  H: 1,\n  h: 1,\n  L: 2,\n  l: 2,\n  M: 2,\n  m: 2,\n  Q: 4,\n  q: 4,\n  S: 4,\n  s: 4,\n  T: 4,\n  t: 2,\n  V: 1,\n  v: 1,\n  Z: 0,\n  z: 0\n};\n\nclass ParsedPath {\n  private COMMAND = 0;\n  private NUMBER = 1;\n  private EOD = 2;\n  private _closed?: boolean;\n  segments: Segment[] = [];\n\n  constructor(d: string) {\n    this.parseData(d);\n    this.processPoints();\n  }\n\n  private tokenize(d: string): PathToken[] {\n    const tokens: PathToken[] = new Array();\n    while (d !== '') {\n      if (d.match(/^([ \\t\\r\\n,]+)/)) {\n        d = d.substr(RegExp.$1.length);\n      } else if (d.match(/^([aAcChHlLmMqQsStTvVzZ])/)) {\n        tokens[tokens.length] = { type: this.COMMAND, text: RegExp.$1 };\n        d = d.substr(RegExp.$1.length);\n      } else if (d.match(/^(([-+]?[0-9]+(\\.[0-9]*)?|[-+]?\\.[0-9]+)([eE][-+]?[0-9]+)?)/)) {\n        tokens[tokens.length] = { type: this.NUMBER, text: `${parseFloat(RegExp.$1)}` };\n        d = d.substr(RegExp.$1.length);\n      } else {\n        console.error('Unrecognized segment command: ' + d);\n        return [];\n      }\n    }\n    tokens[tokens.length] = { type: this.EOD, text: '' };\n    return tokens;\n  }\n\n  private parseData(d: string) {\n    const tokens = this.tokenize(d);\n    let index = 0;\n    let token = tokens[index];\n    let mode: string = 'BOD';\n    this.segments = new Array();\n    while (!isType(token, this.EOD)) {\n      let param_length: number;\n      const params: number[] = new Array();\n      if (mode === 'BOD') {\n        if (token.text === 'M' || token.text === 'm') {\n          index++;\n          param_length = PARAMS[token.text];\n          mode = token.text;\n        } else {\n          this.parseData('M0,0' + d);\n          return;\n        }\n      } else {\n        if (isType(token, this.NUMBER)) {\n          param_length = PARAMS[mode];\n        } else {\n          index++;\n          param_length = PARAMS[token.text];\n          mode = token.text;\n        }\n      }\n      if ((index + param_length) < tokens.length) {\n        for (let i = index; i < index + param_length; i++) {\n          const numbeToken = tokens[i];\n          if (isType(numbeToken, this.NUMBER)) {\n            params[params.length] = +numbeToken.text;\n          }\n          else {\n            console.error('Parameter type is not a number: ' + mode + ',' + numbeToken.text);\n            return;\n          }\n        }\n        if (typeof PARAMS[mode] === 'number') {\n          const segment: Segment = { key: mode, data: params };\n          this.segments.push(segment);\n          index += param_length;\n          token = tokens[index];\n          if (mode === 'M') mode = 'L';\n          if (mode === 'm') mode = 'l';\n        } else {\n          console.error('Unsupported segment type: ' + mode);\n          return;\n        }\n      } else {\n        console.error('Path data ended before all parameters were found');\n      }\n    }\n  }\n\n  get closed() {\n    if (typeof this._closed === 'undefined') {\n      this._closed = false;\n      for (const s of this.segments) {\n        if (s.key.toLowerCase() === 'z') {\n          this._closed = true;\n        }\n      }\n    }\n    return this._closed;\n  }\n\n  processPoints() {\n    let first: Point | null = null;\n    let currentPoint: Point = [0, 0];\n    for (let i = 0; i < this.segments.length; i++) {\n      const s = this.segments[i];\n      switch (s.key) {\n        case 'M':\n        case 'L':\n        case 'T':\n          s.point = [s.data[0], s.data[1]];\n          break;\n        case 'm':\n        case 'l':\n        case 't':\n          s.point = [s.data[0] + currentPoint[0], s.data[1] + currentPoint[1]];\n          break;\n        case 'H':\n          s.point = [s.data[0], currentPoint[1]];\n          break;\n        case 'h':\n          s.point = [s.data[0] + currentPoint[0], currentPoint[1]];\n          break;\n        case 'V':\n          s.point = [currentPoint[0], s.data[0]];\n          break;\n        case 'v':\n          s.point = [currentPoint[0], s.data[0] + currentPoint[1]];\n          break;\n        case 'z':\n        case 'Z':\n          if (first) {\n            s.point = [first[0], first[1]];\n          }\n          break;\n        case 'C':\n          s.point = [s.data[4], s.data[5]];\n          break;\n        case 'c':\n          s.point = [s.data[4] + currentPoint[0], s.data[5] + currentPoint[1]];\n          break;\n        case 'S':\n          s.point = [s.data[2], s.data[3]];\n          break;\n        case 's':\n          s.point = [s.data[2] + currentPoint[0], s.data[3] + currentPoint[1]];\n          break;\n        case 'Q':\n          s.point = [s.data[2], s.data[3]];\n          break;\n        case 'q':\n          s.point = [s.data[2] + currentPoint[0], s.data[3] + currentPoint[1]];\n          break;\n        case 'A':\n          s.point = [s.data[5], s.data[6]];\n          break;\n        case 'a':\n          s.point = [s.data[5] + currentPoint[0], s.data[6] + currentPoint[1]];\n          break;\n      }\n      if (s.key === 'm' || s.key === 'M') {\n        first = null;\n      }\n      if (s.point) {\n        currentPoint = s.point;\n        if (!first) {\n          first = s.point;\n        }\n      }\n      if (s.key === 'z' || s.key === 'Z') {\n        first = null;\n      }\n    }\n  }\n}\n\nexport class RoughPath {\n  private parsed: ParsedPath;\n  private _position: Point = [0, 0];\n  private _first: Point | null = null;\n  private _linearPoints?: Point[][];\n  bezierReflectionPoint: Point | null = null;\n  quadReflectionPoint: Point | null = null;\n\n  constructor(d: string) {\n    this.parsed = new ParsedPath(d);\n  }\n\n  get segments(): Segment[] {\n    return this.parsed.segments;\n  }\n\n  get closed(): boolean {\n    return this.parsed.closed;\n  }\n\n  get linearPoints(): Point[][] {\n    if (!this._linearPoints) {\n      const lp: Point[][] = [];\n      let points: Point[] = [];\n      for (const s of this.parsed.segments) {\n        const key = s.key.toLowerCase();\n        if (key === 'm' || key === 'z') {\n          if (points.length) {\n            lp.push(points);\n            points = [];\n          }\n          if (key === 'z') {\n            continue;\n          }\n        }\n        if (s.point) {\n          points.push(s.point);\n        }\n      }\n      if (points.length) {\n        lp.push(points);\n        points = [];\n      }\n      this._linearPoints = lp;\n    }\n    return this._linearPoints;\n  }\n\n  get first(): Point | null {\n    return this._first;\n  }\n\n  set first(v: Point | null) {\n    this._first = v;\n  }\n\n  setPosition(x: number, y: number) {\n    this._position = [x, y];\n    if (!this._first) {\n      this._first = [x, y];\n    }\n  }\n\n  get position(): Point {\n    return this._position;\n  }\n\n  get x(): number {\n    return this._position[0];\n  }\n\n  get y(): number {\n    return this._position[1];\n  }\n}\n\n\nexport interface RoughArcSegment {\n  cp1: Point;\n  cp2: Point;\n  to: Point;\n}\n\n// Algorithm as described in https://www.w3.org/TR/SVG/implnote.html\n// Code adapted from nsSVGPathDataParser.cpp in Mozilla \n// https://hg.mozilla.org/mozilla-central/file/17156fbebbc8/content/svg/content/src/nsSVGPathDataParser.cpp#l887\nexport class RoughArcConverter {\n  private _segIndex = 0;\n  private _numSegs = 0;\n  private _rx = 0;\n  private _ry = 0;\n  private _sinPhi = 0;\n  private _cosPhi = 0;\n  private _C: Point = [0, 0];\n  private _theta = 0;\n  private _delta = 0;\n  private _T = 0;\n  private _from: Point;\n\n  constructor(from: Point, to: Point, radii: Point, angle: number, largeArcFlag: boolean, sweepFlag: boolean) {\n    this._from = from;\n    if (from[0] === to[0] && from[1] === to[1]) {\n      return;\n    }\n    const radPerDeg = Math.PI / 180;\n    this._rx = Math.abs(radii[0]);\n    this._ry = Math.abs(radii[1]);\n    this._sinPhi = Math.sin(angle * radPerDeg);\n    this._cosPhi = Math.cos(angle * radPerDeg);\n    const x1dash = this._cosPhi * (from[0] - to[0]) / 2.0 + this._sinPhi * (from[1] - to[1]) / 2.0;\n    const y1dash = -this._sinPhi * (from[0] - to[0]) / 2.0 + this._cosPhi * (from[1] - to[1]) / 2.0;\n    let root = 0;\n    const numerator = this._rx * this._rx * this._ry * this._ry - this._rx * this._rx * y1dash * y1dash - this._ry * this._ry * x1dash * x1dash;\n    if (numerator < 0) {\n      const s = Math.sqrt(1 - (numerator / (this._rx * this._rx * this._ry * this._ry)));\n      this._rx = this._rx * s;\n      this._ry = this._ry * s;\n      root = 0;\n    } else {\n      root = (largeArcFlag === sweepFlag ? -1.0 : 1.0) *\n        Math.sqrt(numerator / (this._rx * this._rx * y1dash * y1dash + this._ry * this._ry * x1dash * x1dash));\n    }\n    const cxdash = root * this._rx * y1dash / this._ry;\n    const cydash = -root * this._ry * x1dash / this._rx;\n    this._C = [0, 0];\n    this._C[0] = this._cosPhi * cxdash - this._sinPhi * cydash + (from[0] + to[0]) / 2.0;\n    this._C[1] = this._sinPhi * cxdash + this._cosPhi * cydash + (from[1] + to[1]) / 2.0;\n    this._theta = this.calculateVectorAngle(1.0, 0.0, (x1dash - cxdash) / this._rx, (y1dash - cydash) / this._ry);\n    let dtheta = this.calculateVectorAngle((x1dash - cxdash) / this._rx, (y1dash - cydash) / this._ry, (-x1dash - cxdash) / this._rx, (-y1dash - cydash) / this._ry);\n    if ((!sweepFlag) && (dtheta > 0)) {\n      dtheta -= 2 * Math.PI;\n    } else if (sweepFlag && (dtheta < 0)) {\n      dtheta += 2 * Math.PI;\n    }\n    this._numSegs = Math.ceil(Math.abs(dtheta / (Math.PI / 2)));\n    this._delta = dtheta / this._numSegs;\n    this._T = (8 / 3) * Math.sin(this._delta / 4) * Math.sin(this._delta / 4) / Math.sin(this._delta / 2);\n  }\n\n  getNextSegment(): RoughArcSegment | null {\n    if (this._segIndex === this._numSegs) {\n      return null;\n    }\n    const cosTheta1 = Math.cos(this._theta);\n    const sinTheta1 = Math.sin(this._theta);\n    const theta2 = this._theta + this._delta;\n    const cosTheta2 = Math.cos(theta2);\n    const sinTheta2 = Math.sin(theta2);\n\n    const to: Point = [\n      this._cosPhi * this._rx * cosTheta2 - this._sinPhi * this._ry * sinTheta2 + this._C[0],\n      this._sinPhi * this._rx * cosTheta2 + this._cosPhi * this._ry * sinTheta2 + this._C[1]\n    ];\n    const cp1: Point = [\n      this._from[0] + this._T * (- this._cosPhi * this._rx * sinTheta1 - this._sinPhi * this._ry * cosTheta1),\n      this._from[1] + this._T * (- this._sinPhi * this._rx * sinTheta1 + this._cosPhi * this._ry * cosTheta1)\n    ];\n    const cp2: Point = [\n      to[0] + this._T * (this._cosPhi * this._rx * sinTheta2 + this._sinPhi * this._ry * cosTheta2),\n      to[1] + this._T * (this._sinPhi * this._rx * sinTheta2 - this._cosPhi * this._ry * cosTheta2)\n    ];\n\n    this._theta = theta2;\n    this._from = [to[0], to[1]];\n    this._segIndex++;\n\n    return {\n      cp1: cp1,\n      cp2: cp2,\n      to: to\n    };\n  }\n\n  calculateVectorAngle(ux: number, uy: number, vx: number, vy: number): number {\n    const ta = Math.atan2(uy, ux);\n    const tb = Math.atan2(vy, vx);\n    if (tb >= ta)\n      return tb - ta;\n    return 2 * Math.PI - (ta - tb);\n  }\n}\n\nexport class PathFitter {\n  sets: Point[][];\n  closed: boolean;\n\n  constructor(sets: Point[][], closed: boolean) {\n    this.sets = sets;\n    this.closed = closed;\n  }\n\n  fit(simplification: number): string {\n    const outSets: Point[][] = [];\n    for (const set of this.sets) {\n      const length = set.length;\n      let estLength = Math.floor(simplification * length);\n      if (estLength < 5) {\n        if (length <= 5) {\n          continue;\n        }\n        estLength = 5;\n      }\n      outSets.push(this.reduce(set, estLength));\n    }\n\n    let d = '';\n    for (const set of outSets) {\n      for (let i = 0; i < set.length; i++) {\n        const point = set[i];\n        if (i === 0) {\n          d += 'M' + point[0] + ',' + point[1];\n        } else {\n          d += 'L' + point[0] + ',' + point[1];\n        }\n      }\n      if (this.closed) {\n        d += 'z ';\n      }\n    }\n    return d;\n  }\n\n  distance(p1: Point, p2: Point): number {\n    return Math.sqrt(Math.pow(p1[0] - p2[0], 2) + Math.pow(p1[1] - p2[1], 2));\n  }\n\n  reduce(set: Point[], count: number): Point[] {\n    if (set.length <= count) {\n      return set;\n    }\n    const points: Point[] = set.slice(0);\n    while (points.length > count) {\n      const areas = [];\n      let minArea = -1;\n      let minIndex = -1;\n      for (let i = 1; i < (points.length - 1); i++) {\n        const a = this.distance(points[i - 1], points[i]);\n        const b = this.distance(points[i], points[i + 1]);\n        const c = this.distance(points[i - 1], points[i + 1]);\n        const s = (a + b + c) / 2.0;\n        const area = Math.sqrt(s * (s - a) * (s - b) * (s - c));\n        areas.push(area);\n        if ((minArea < 0) || (area < minArea)) {\n          minArea = area;\n          minIndex = i;\n        }\n      }\n      if (minIndex > 0) {\n        points.splice(minIndex, 1);\n      } else {\n        break;\n      }\n    }\n    return points;\n  }\n}","export declare type Point = [number, number];\n\nexport declare type Line = [Point, Point];\n\nexport interface Rectangle {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n}\n\nexport class Segment {\n  px1: number;\n  px2: number;\n  py1: number;\n  py2: number;\n  xi = Number.MAX_VALUE;\n  yi = Number.MAX_VALUE;\n  a: number;\n  b: number;\n  c: number;\n  _undefined: boolean;\n\n  constructor(p1: Point, p2: Point) {\n    this.px1 = p1[0];\n    this.py1 = p1[1];\n    this.px2 = p2[0];\n    this.py2 = p2[1];\n    this.a = this.py2 - this.py1;\n    this.b = this.px1 - this.px2;\n    this.c = this.px2 * this.py1 - this.px1 * this.py2;\n    this._undefined = ((this.a === 0) && (this.b === 0) && (this.c === 0));\n  }\n\n  isUndefined() {\n    return this._undefined;\n  }\n\n  intersects(otherSegment: Segment): boolean {\n    if (this.isUndefined() || otherSegment.isUndefined()) {\n      return false;\n    }\n    let grad1 = Number.MAX_VALUE;\n    let grad2 = Number.MAX_VALUE;\n    let int1 = 0, int2 = 0;\n    const a = this.a, b = this.b, c = this.c;\n\n    if (Math.abs(b) > 0.00001) {\n      grad1 = -a / b;\n      int1 = -c / b;\n    }\n    if (Math.abs(otherSegment.b) > 0.00001) {\n      grad2 = -otherSegment.a / otherSegment.b;\n      int2 = -otherSegment.c / otherSegment.b;\n    }\n\n    if (grad1 === Number.MAX_VALUE) {\n      if (grad2 === Number.MAX_VALUE) {\n        if ((-c / a) !== (-otherSegment.c / otherSegment.a)) {\n          return false;\n        }\n        if ((this.py1 >= Math.min(otherSegment.py1, otherSegment.py2)) && (this.py1 <= Math.max(otherSegment.py1, otherSegment.py2))) {\n          this.xi = this.px1;\n          this.yi = this.py1;\n          return true;\n        }\n        if ((this.py2 >= Math.min(otherSegment.py1, otherSegment.py2)) && (this.py2 <= Math.max(otherSegment.py1, otherSegment.py2))) {\n          this.xi = this.px2;\n          this.yi = this.py2;\n          return true;\n        }\n        return false;\n      }\n      this.xi = this.px1;\n      this.yi = (grad2 * this.xi + int2);\n      if (((this.py1 - this.yi) * (this.yi - this.py2) < -0.00001) || ((otherSegment.py1 - this.yi) * (this.yi - otherSegment.py2) < -0.00001)) {\n        return false;\n      }\n      if (Math.abs(otherSegment.a) < 0.00001) {\n        if ((otherSegment.px1 - this.xi) * (this.xi - otherSegment.px2) < -0.00001) {\n          return false;\n        }\n        return true;\n      }\n      return true;\n    }\n\n    if (grad2 === Number.MAX_VALUE) {\n      this.xi = otherSegment.px1;\n      this.yi = grad1 * this.xi + int1;\n      if (((otherSegment.py1 - this.yi) * (this.yi - otherSegment.py2) < -0.00001) || ((this.py1 - this.yi) * (this.yi - this.py2) < -0.00001)) {\n        return false;\n      }\n      if (Math.abs(a) < 0.00001) {\n        if ((this.px1 - this.xi) * (this.xi - this.px2) < -0.00001) {\n          return false;\n        }\n        return true;\n      }\n      return true;\n    }\n\n    if (grad1 === grad2) {\n      if (int1 !== int2) {\n        return false;\n      }\n      if ((this.px1 >= Math.min(otherSegment.px1, otherSegment.px2)) && (this.px1 <= Math.max(otherSegment.py1, otherSegment.py2))) {\n        this.xi = this.px1;\n        this.yi = this.py1;\n        return true;\n      }\n      if ((this.px2 >= Math.min(otherSegment.px1, otherSegment.px2)) && (this.px2 <= Math.max(otherSegment.px1, otherSegment.px2))) {\n        this.xi = this.px2;\n        this.yi = this.py2;\n        return true;\n      }\n      return false;\n    }\n\n    this.xi = ((int2 - int1) / (grad1 - grad2));\n    this.yi = (grad1 * this.xi + int1);\n\n    if (((this.px1 - this.xi) * (this.xi - this.px2) < -0.00001) || ((otherSegment.px1 - this.xi) * (this.xi - otherSegment.px2) < -0.00001)) {\n      return false;\n    }\n    return true;\n  }\n}","import { Segment } from '../geometry';\n\nexport class HachureIterator {\n  top: number;\n  bottom: number;\n  left: number;\n  right: number;\n  gap: number;\n  sinAngle: number;\n  tanAngle: number;\n  pos: number;\n  deltaX: number = 0;\n  hGap: number = 0;\n  sLeft?: Segment;\n  sRight?: Segment;\n\n  constructor(top: number, bottom: number, left: number, right: number, gap: number, sinAngle: number, cosAngle: number, tanAngle: number) {\n    this.top = top;\n    this.bottom = bottom;\n    this.left = left;\n    this.right = right;\n    this.gap = gap;\n    this.sinAngle = sinAngle;\n    this.tanAngle = tanAngle;\n\n    if (Math.abs(sinAngle) < 0.0001) {\n      this.pos = left + gap;\n    } else if (Math.abs(sinAngle) > 0.9999) {\n      this.pos = top + gap;\n    } else {\n      this.deltaX = (bottom - top) * Math.abs(tanAngle);\n      this.pos = left - Math.abs(this.deltaX);\n      this.hGap = Math.abs(gap / cosAngle);\n      this.sLeft = new Segment([left, bottom], [left, top]);\n      this.sRight = new Segment([right, bottom], [right, top]);\n    }\n  }\n\n  nextLine(): number[] | null {\n    if (Math.abs(this.sinAngle) < 0.0001) {\n      if (this.pos < this.right) {\n        const line = [this.pos, this.top, this.pos, this.bottom];\n        this.pos += this.gap;\n        return line;\n      }\n    } else if (Math.abs(this.sinAngle) > 0.9999) {\n      if (this.pos < this.bottom) {\n        const line = [this.left, this.pos, this.right, this.pos];\n        this.pos += this.gap;\n        return line;\n      }\n    } else {\n      let xLower = this.pos - this.deltaX / 2;\n      let xUpper = this.pos + this.deltaX / 2;\n      let yLower = this.bottom;\n      let yUpper = this.top;\n      if (this.pos < (this.right + this.deltaX)) {\n        while (((xLower < this.left) && (xUpper < this.left)) || ((xLower > this.right) && (xUpper > this.right))) {\n          this.pos += this.hGap;\n          xLower = this.pos - this.deltaX / 2;\n          xUpper = this.pos + this.deltaX / 2;\n          if (this.pos > (this.right + this.deltaX)) {\n            return null;\n          }\n        }\n        const s = new Segment([xLower, yLower], [xUpper, yUpper]);\n        if (this.sLeft && s.intersects(this.sLeft)) {\n          xLower = s.xi;\n          yLower = s.yi;\n        }\n        if (this.sRight && s.intersects(this.sRight)) {\n          xUpper = s.xi;\n          yUpper = s.yi;\n        }\n        if (this.tanAngle > 0) {\n          xLower = this.right - (xLower - this.left);\n          xUpper = this.right - (xUpper - this.left);\n        }\n        const line = [xLower, yLower, xUpper, yUpper];\n        this.pos += this.hGap;\n        return line;\n      }\n    }\n    return null;\n  }\n}","import { Point, Segment, Line } from '../geometry';\nimport { ResolvedOptions } from '../core';\nimport { HachureIterator } from '../utils/hachure';\nimport { RenderHelper } from './filler-interface';\n\nexport function lineLength(line: Line): number {\n  const p1 = line[0];\n  const p2 = line[1];\n  return Math.sqrt(Math.pow(p1[0] - p2[0], 2) + Math.pow(p1[1] - p2[1], 2));\n}\n\nexport function getIntersectingLines(line: number[], points: Point[]): Point[] {\n  const intersections: Point[] = [];\n  const s1 = new Segment([line[0], line[1]], [line[2], line[3]]);\n  for (let i = 0; i < points.length; i++) {\n    const s2 = new Segment(points[i], points[(i + 1) % points.length]);\n    if (s1.intersects(s2)) {\n      intersections.push([s1.xi, s1.yi]);\n    }\n  }\n  return intersections;\n}\n\nexport function affine(x: number, y: number, cx: number, cy: number, sinAnglePrime: number, cosAnglePrime: number, R: number): Point {\n  const A = -cx * cosAnglePrime - cy * sinAnglePrime + cx;\n  const B = R * (cx * sinAnglePrime - cy * cosAnglePrime) + cy;\n  const C = cosAnglePrime;\n  const D = sinAnglePrime;\n  const E = -R * sinAnglePrime;\n  const F = R * cosAnglePrime;\n  return [\n    A + C * x + D * y,\n    B + E * x + F * y\n  ];\n}\n\nexport function hachureLinesForPolygon(points: Point[], o: ResolvedOptions): Line[] {\n  const ret: Line[] = [];\n  if (points && points.length) {\n    let left = points[0][0];\n    let right = points[0][0];\n    let top = points[0][1];\n    let bottom = points[0][1];\n    for (let i = 1; i < points.length; i++) {\n      left = Math.min(left, points[i][0]);\n      right = Math.max(right, points[i][0]);\n      top = Math.min(top, points[i][1]);\n      bottom = Math.max(bottom, points[i][1]);\n    }\n    const angle = o.hachureAngle;\n    let gap = o.hachureGap;\n    if (gap < 0) {\n      gap = o.strokeWidth * 4;\n    }\n    gap = Math.max(gap, 0.1);\n    const radPerDeg = Math.PI / 180;\n    const hachureAngle = (angle % 180) * radPerDeg;\n    const cosAngle = Math.cos(hachureAngle);\n    const sinAngle = Math.sin(hachureAngle);\n    const tanAngle = Math.tan(hachureAngle);\n    const it = new HachureIterator(top - 1, bottom + 1, left - 1, right + 1, gap, sinAngle, cosAngle, tanAngle);\n    let rect: number[] | null;\n    while ((rect = it.nextLine()) != null) {\n      const lines = getIntersectingLines(rect, points);\n      for (let i = 0; i < lines.length; i++) {\n        if (i < (lines.length - 1)) {\n          const p1 = lines[i];\n          const p2 = lines[i + 1];\n          ret.push([p1, p2]);\n        }\n      }\n    }\n  }\n  return ret;\n}\n\nexport function hachureLinesForEllipse(helper: RenderHelper, cx: number, cy: number, width: number, height: number, o: ResolvedOptions): Line[] {\n  const ret: Line[] = [];\n  let rx = Math.abs(width / 2);\n  let ry = Math.abs(height / 2);\n  rx += helper.randOffset(rx * 0.05, o);\n  ry += helper.randOffset(ry * 0.05, o);\n  const angle = o.hachureAngle;\n  let gap = o.hachureGap;\n  if (gap <= 0) {\n    gap = o.strokeWidth * 4;\n  }\n  let fweight = o.fillWeight;\n  if (fweight < 0) {\n    fweight = o.strokeWidth / 2;\n  }\n  const radPerDeg = Math.PI / 180;\n  const hachureAngle = (angle % 180) * radPerDeg;\n  const tanAngle = Math.tan(hachureAngle);\n  const aspectRatio = ry / rx;\n  const hyp = Math.sqrt(aspectRatio * tanAngle * aspectRatio * tanAngle + 1);\n  const sinAnglePrime = aspectRatio * tanAngle / hyp;\n  const cosAnglePrime = 1 / hyp;\n  const gapPrime = gap / ((rx * ry / Math.sqrt((ry * cosAnglePrime) * (ry * cosAnglePrime) + (rx * sinAnglePrime) * (rx * sinAnglePrime))) / rx);\n  let halfLen = Math.sqrt((rx * rx) - (cx - rx + gapPrime) * (cx - rx + gapPrime));\n  for (let xPos = cx - rx + gapPrime; xPos < cx + rx; xPos += gapPrime) {\n    halfLen = Math.sqrt((rx * rx) - (cx - xPos) * (cx - xPos));\n    const p1 = affine(xPos, cy - halfLen, cx, cy, sinAnglePrime, cosAnglePrime, aspectRatio);\n    const p2 = affine(xPos, cy + halfLen, cx, cy, sinAnglePrime, cosAnglePrime, aspectRatio);\n    ret.push([p1, p2]);\n  }\n  return ret;\n}","import { PatternFiller, RenderHelper } from './filler-interface';\nimport { ResolvedOptions, OpSet, Op } from '../core';\nimport { Point, Line } from '../geometry';\nimport { hachureLinesForPolygon, hachureLinesForEllipse } from './filler-utils';\n\nexport class HachureFiller implements PatternFiller {\n  private helper: RenderHelper;\n\n  constructor(helper: RenderHelper) {\n    this.helper = helper;\n  }\n\n  fillPolygon(points: Point[], o: ResolvedOptions): OpSet {\n    return this._fillPolygon(points, o);\n  }\n\n  fillEllipse(cx: number, cy: number, width: number, height: number, o: ResolvedOptions): OpSet {\n    return this._fillEllipse(cx, cy, width, height, o);\n  }\n\n  protected _fillPolygon(points: Point[], o: ResolvedOptions, connectEnds: boolean = false): OpSet {\n    const lines = hachureLinesForPolygon(points, o);\n    const ops = this.renderLines(lines, o, connectEnds);\n    return { type: 'fillSketch', ops };\n  }\n\n  protected _fillEllipse(cx: number, cy: number, width: number, height: number, o: ResolvedOptions, connectEnds: boolean = false): OpSet {\n    const lines = hachureLinesForEllipse(this.helper, cx, cy, width, height, o);\n    const ops = this.renderLines(lines, o, connectEnds);\n    return { type: 'fillSketch', ops };\n  }\n\n  private renderLines(lines: Line[], o: ResolvedOptions, connectEnds: boolean): Op[] {\n    let ops: Op[] = [];\n    let prevPoint: Point | null = null;\n    for (const line of lines) {\n      ops = ops.concat(this.helper.doubleLineOps(line[0][0], line[0][1], line[1][0], line[1][1], o));\n      if (connectEnds && prevPoint) {\n        ops = ops.concat(this.helper.doubleLineOps(prevPoint[0], prevPoint[1], line[0][0], line[0][1], o));\n      }\n      prevPoint = line[1];\n    }\n    return ops;\n  }\n}","import { HachureFiller } from './hachure-filler';\nimport { ResolvedOptions, OpSet } from '../core';\nimport { Point } from '../geometry';\n\nexport class ZigZagFiller extends HachureFiller {\n  fillPolygon(points: Point[], o: ResolvedOptions): OpSet {\n    return this._fillPolygon(points, o, true);\n  }\n\n  fillEllipse(cx: number, cy: number, width: number, height: number, o: ResolvedOptions): OpSet {\n    return this._fillEllipse(cx, cy, width, height, o, true);\n  }\n}","import { HachureFiller } from './hachure-filler';\nimport { ResolvedOptions, OpSet } from '../core';\nimport { Point } from '../geometry';\n\nexport class HatchFiller extends HachureFiller {\n  fillPolygon(points: Point[], o: ResolvedOptions): OpSet {\n    const set = this._fillPolygon(points, o);\n    const o2 = Object.assign({}, o, { hachureAngle: o.hachureAngle + 90 });\n    const set2 = this._fillPolygon(points, o2);\n    set.ops = set.ops.concat(set2.ops);\n    return set;\n  }\n\n  fillEllipse(cx: number, cy: number, width: number, height: number, o: ResolvedOptions): OpSet {\n    const set = this._fillEllipse(cx, cy, width, height, o);\n    const o2 = Object.assign({}, o, { hachureAngle: o.hachureAngle + 90 });\n    const set2 = this._fillEllipse(cx, cy, width, height, o2);\n    set.ops = set.ops.concat(set2.ops);\n    return set;\n  }\n}","import { PatternFiller, RenderHelper } from './filler-interface';\nimport { ResolvedOptions, OpSet, Op } from '../core';\nimport { Point, Line } from '../geometry';\nimport { hachureLinesForPolygon, hachureLinesForEllipse, lineLength } from './filler-utils';\n\nexport class DotFiller implements PatternFiller {\n  private helper: RenderHelper;\n\n  constructor(helper: RenderHelper) {\n    this.helper = helper;\n  }\n\n  fillPolygon(points: Point[], o: ResolvedOptions): OpSet {\n    o = Object.assign({}, o, { curveStepCount: 4, hachureAngle: 0 });\n    const lines = hachureLinesForPolygon(points, o);\n    return this.dotsOnLines(lines, o);\n  }\n\n  fillEllipse(cx: number, cy: number, width: number, height: number, o: ResolvedOptions): OpSet {\n    o = Object.assign({}, o, { curveStepCount: 4, hachureAngle: 0 });\n    const lines = hachureLinesForEllipse(this.helper, cx, cy, width, height, o);\n    return this.dotsOnLines(lines, o);\n  }\n\n  private dotsOnLines(lines: Line[], o: ResolvedOptions): OpSet {\n    let ops: Op[] = [];\n    let gap = o.hachureGap;\n    if (gap < 0) {\n      gap = o.strokeWidth * 4;\n    }\n    gap = Math.max(gap, 0.1);\n    let fweight = o.fillWeight;\n    if (fweight < 0) {\n      fweight = o.strokeWidth / 2;\n    }\n    for (const line of lines) {\n      const length = lineLength(line);\n      const dl = length / gap;\n      const count = Math.ceil(dl) - 1;\n      const alpha = Math.atan((line[1][1] - line[0][1]) / (line[1][0] - line[0][0]));\n      for (let i = 0; i < count; i++) {\n        const l = gap * (i + 1);\n        const dy = l * Math.sin(alpha);\n        const dx = l * Math.cos(alpha);\n        const c: Point = [line[0][0] - dx, line[0][1] + dy];\n        const cx = this.helper.randOffsetWithRange(c[0] - gap / 4, c[0] + gap / 4, o);\n        const cy = this.helper.randOffsetWithRange(c[1] - gap / 4, c[1] + gap / 4, o);\n        const el = this.helper.ellipse(cx, cy, fweight, fweight, o);\n        ops = ops.concat(el.ops);\n      }\n    }\n    return { type: 'fillSketch', ops };\n  }\n}","import { ResolvedOptions } from '../core';\nimport { PatternFiller, RenderHelper } from './filler-interface';\nimport { HachureFiller } from './hachure-filler';\nimport { ZigZagFiller } from './zigzag-filler';\nimport { HatchFiller } from './hatch-filler';\nimport { DotFiller } from './dot-filler';\n\nconst fillers: { [name: string]: PatternFiller } = {};\n\nexport function getFiller(o: ResolvedOptions, helper: RenderHelper): PatternFiller {\n  let fillerName = o.fillStyle || 'hachure';\n  if (!fillers[fillerName]) {\n    switch (fillerName) {\n      case 'zigzag':\n        if (!fillers[fillerName]) {\n          fillers[fillerName] = new ZigZagFiller(helper);\n        }\n        break;\n      case 'cross-hatch':\n        if (!fillers[fillerName]) {\n          fillers[fillerName] = new HatchFiller(helper);\n        }\n        break;\n      case 'dots':\n        if (!fillers[fillerName]) {\n          fillers[fillerName] = new DotFiller(helper);\n        }\n        break;\n      case 'hachure':\n      default:\n        fillerName = 'hachure';\n        if (!fillers[fillerName]) {\n          fillers[fillerName] = new HachureFiller(helper);\n        }\n        break;\n    }\n  }\n  return fillers[fillerName];\n}","import { ResolvedOptions, Op, OpSet } from './core';\nimport { Point } from './geometry';\nimport { RoughPath, PathFitter, Segment, RoughArcConverter } from './path';\nimport { getFiller } from './fillers/filler';\nimport { RenderHelper } from './fillers/filler-interface';\n\nconst helper: RenderHelper = {\n  randOffset,\n  randOffsetWithRange,\n  ellipse,\n  doubleLineOps\n};\n\nexport function line(x1: number, y1: number, x2: number, y2: number, o: ResolvedOptions): OpSet {\n  return { type: 'path', ops: _doubleLine(x1, y1, x2, y2, o) };\n}\n\nexport function linearPath(points: Point[], close: boolean, o: ResolvedOptions): OpSet {\n  const len = (points || []).length;\n  if (len > 2) {\n    let ops: Op[] = [];\n    for (let i = 0; i < (len - 1); i++) {\n      ops = ops.concat(_doubleLine(points[i][0], points[i][1], points[i + 1][0], points[i + 1][1], o));\n    }\n    if (close) {\n      ops = ops.concat(_doubleLine(points[len - 1][0], points[len - 1][1], points[0][0], points[0][1], o));\n    }\n    return { type: 'path', ops };\n  } else if (len === 2) {\n    return line(points[0][0], points[0][1], points[1][0], points[1][1], o);\n  }\n  return { type: 'path', ops: [] };\n}\n\nexport function polygon(points: Point[], o: ResolvedOptions): OpSet {\n  return linearPath(points, true, o);\n}\n\nexport function rectangle(x: number, y: number, width: number, height: number, o: ResolvedOptions): OpSet {\n  const points: Point[] = [\n    [x, y], [x + width, y], [x + width, y + height], [x, y + height]\n  ];\n  return polygon(points, o);\n}\n\nexport function curve(points: Point[], o: ResolvedOptions): OpSet {\n  const o1 = _curveWithOffset(points, 1 * (1 + o.roughness * 0.2), o);\n  const o2 = _curveWithOffset(points, 1.5 * (1 + o.roughness * 0.22), o);\n  return { type: 'path', ops: o1.concat(o2) };\n}\n\nexport function ellipse(x: number, y: number, width: number, height: number, o: ResolvedOptions): OpSet {\n  const increment = (Math.PI * 2) / o.curveStepCount;\n  let rx = Math.abs(width / 2);\n  let ry = Math.abs(height / 2);\n  rx += _offsetOpt(rx * 0.05, o);\n  ry += _offsetOpt(ry * 0.05, o);\n  const o1 = _ellipse(increment, x, y, rx, ry, 1, increment * _offset(0.1, _offset(0.4, 1, o), o), o);\n  const o2 = _ellipse(increment, x, y, rx, ry, 1.5, 0, o);\n  return { type: 'path', ops: o1.concat(o2) };\n}\n\nexport function arc(x: number, y: number, width: number, height: number, start: number, stop: number, closed: boolean, roughClosure: boolean, o: ResolvedOptions): OpSet {\n  const cx = x;\n  const cy = y;\n  let rx = Math.abs(width / 2);\n  let ry = Math.abs(height / 2);\n  rx += _offsetOpt(rx * 0.01, o);\n  ry += _offsetOpt(ry * 0.01, o);\n  let strt = start;\n  let stp = stop;\n  while (strt < 0) {\n    strt += Math.PI * 2;\n    stp += Math.PI * 2;\n  }\n  if ((stp - strt) > (Math.PI * 2)) {\n    strt = 0;\n    stp = Math.PI * 2;\n  }\n  const ellipseInc = (Math.PI * 2) / o.curveStepCount;\n  const arcInc = Math.min(ellipseInc / 2, (stp - strt) / 2);\n  const o1 = _arc(arcInc, cx, cy, rx, ry, strt, stp, 1, o);\n  const o2 = _arc(arcInc, cx, cy, rx, ry, strt, stp, 1.5, o);\n  let ops = o1.concat(o2);\n  if (closed) {\n    if (roughClosure) {\n      ops = ops.concat(_doubleLine(cx, cy, cx + rx * Math.cos(strt), cy + ry * Math.sin(strt), o));\n      ops = ops.concat(_doubleLine(cx, cy, cx + rx * Math.cos(stp), cy + ry * Math.sin(stp), o));\n    } else {\n      ops.push({ op: 'lineTo', data: [cx, cy] });\n      ops.push({ op: 'lineTo', data: [cx + rx * Math.cos(strt), cy + ry * Math.sin(strt)] });\n    }\n  }\n  return { type: 'path', ops };\n}\n\nexport function svgPath(path: string, o: ResolvedOptions): OpSet {\n  path = (path || '').replace(/\\n/g, ' ').replace(/(-\\s)/g, '-').replace('/(\\s\\s)/g', ' ');\n  let p = new RoughPath(path);\n  if (o.simplification) {\n    const fitter = new PathFitter(p.linearPoints, p.closed);\n    const d = fitter.fit(o.simplification);\n    p = new RoughPath(d);\n  }\n  let ops: Op[] = [];\n  const segments = p.segments || [];\n  for (let i = 0; i < segments.length; i++) {\n    const s = segments[i];\n    const prev = i > 0 ? segments[i - 1] : null;\n    const opList = _processSegment(p, s, prev, o);\n    if (opList && opList.length) {\n      ops = ops.concat(opList);\n    }\n  }\n  return { type: 'path', ops };\n}\n\n// Fills\n\nexport function solidFillPolygon(points: Point[], o: ResolvedOptions): OpSet {\n  const ops: Op[] = [];\n  if (points.length) {\n    const offset = o.maxRandomnessOffset || 0;\n    const len = points.length;\n    if (len > 2) {\n      ops.push({ op: 'move', data: [points[0][0] + _offsetOpt(offset, o), points[0][1] + _offsetOpt(offset, o)] });\n      for (let i = 1; i < len; i++) {\n        ops.push({ op: 'lineTo', data: [points[i][0] + _offsetOpt(offset, o), points[i][1] + _offsetOpt(offset, o)] });\n      }\n    }\n  }\n  return { type: 'fillPath', ops };\n}\n\nexport function patternFillPolygon(points: Point[], o: ResolvedOptions): OpSet {\n  return getFiller(o, helper).fillPolygon(points, o);\n}\n\nexport function patternFillEllipse(cx: number, cy: number, width: number, height: number, o: ResolvedOptions): OpSet {\n  return getFiller(o, helper).fillEllipse(cx, cy, width, height, o);\n}\n\nexport function patternFillArc(x: number, y: number, width: number, height: number, start: number, stop: number, o: ResolvedOptions): OpSet {\n  const cx = x;\n  const cy = y;\n  let rx = Math.abs(width / 2);\n  let ry = Math.abs(height / 2);\n  rx += _offsetOpt(rx * 0.01, o);\n  ry += _offsetOpt(ry * 0.01, o);\n  let strt = start;\n  let stp = stop;\n  while (strt < 0) {\n    strt += Math.PI * 2;\n    stp += Math.PI * 2;\n  }\n  if ((stp - strt) > (Math.PI * 2)) {\n    strt = 0;\n    stp = Math.PI * 2;\n  }\n  const increment = (stp - strt) / o.curveStepCount;\n  const points: Point[] = [];\n  for (let angle = strt; angle <= stp; angle = angle + increment) {\n    points.push([cx + rx * Math.cos(angle), cy + ry * Math.sin(angle)]);\n  }\n  points.push([cx + rx * Math.cos(stp), cy + ry * Math.sin(stp)]);\n  points.push([cx, cy]);\n  return patternFillPolygon(points, o);\n}\n\nexport function randOffset(x: number, o: ResolvedOptions): number {\n  return _offsetOpt(x, o);\n}\n\nexport function randOffsetWithRange(min: number, max: number, o: ResolvedOptions): number {\n  return _offset(min, max, o);\n}\n\nexport function doubleLineOps(x1: number, y1: number, x2: number, y2: number, o: ResolvedOptions): Op[] {\n  return _doubleLine(x1, y1, x2, y2, o);\n}\n\n// Private helpers\n\nfunction _offset(min: number, max: number, ops: ResolvedOptions): number {\n  return ops.roughness * ((Math.random() * (max - min)) + min);\n}\n\nfunction _offsetOpt(x: number, ops: ResolvedOptions): number {\n  return _offset(-x, x, ops);\n}\n\nfunction _doubleLine(x1: number, y1: number, x2: number, y2: number, o: ResolvedOptions): Op[] {\n  const o1 = _line(x1, y1, x2, y2, o, true, false);\n  const o2 = _line(x1, y1, x2, y2, o, true, true);\n  return o1.concat(o2);\n}\n\nfunction _line(x1: number, y1: number, x2: number, y2: number, o: ResolvedOptions, move: boolean, overlay: boolean): Op[] {\n  const lengthSq = Math.pow((x1 - x2), 2) + Math.pow((y1 - y2), 2);\n  let offset = o.maxRandomnessOffset || 0;\n  if ((offset * offset * 100) > lengthSq) {\n    offset = Math.sqrt(lengthSq) / 10;\n  }\n  const halfOffset = offset / 2;\n  const divergePoint = 0.2 + Math.random() * 0.2;\n  let midDispX = o.bowing * o.maxRandomnessOffset * (y2 - y1) / 200;\n  let midDispY = o.bowing * o.maxRandomnessOffset * (x1 - x2) / 200;\n  midDispX = _offsetOpt(midDispX, o);\n  midDispY = _offsetOpt(midDispY, o);\n  const ops: Op[] = [];\n  const randomHalf = () => _offsetOpt(halfOffset, o);\n  const randomFull = () => _offsetOpt(offset, o);\n  if (move) {\n    if (overlay) {\n      ops.push({\n        op: 'move', data: [\n          x1 + randomHalf(),\n          y1 + randomHalf()\n        ]\n      });\n    } else {\n      ops.push({\n        op: 'move', data: [\n          x1 + _offsetOpt(offset, o),\n          y1 + _offsetOpt(offset, o)\n        ]\n      });\n    }\n  }\n  if (overlay) {\n    ops.push({\n      op: 'bcurveTo', data: [\n        midDispX + x1 + (x2 - x1) * divergePoint + randomHalf(),\n        midDispY + y1 + (y2 - y1) * divergePoint + randomHalf(),\n        midDispX + x1 + 2 * (x2 - x1) * divergePoint + randomHalf(),\n        midDispY + y1 + 2 * (y2 - y1) * divergePoint + randomHalf(),\n        x2 + randomHalf(),\n        y2 + randomHalf()\n      ]\n    });\n  } else {\n    ops.push({\n      op: 'bcurveTo', data: [\n        midDispX + x1 + (x2 - x1) * divergePoint + randomFull(),\n        midDispY + y1 + (y2 - y1) * divergePoint + randomFull(),\n        midDispX + x1 + 2 * (x2 - x1) * divergePoint + randomFull(),\n        midDispY + y1 + 2 * (y2 - y1) * divergePoint + randomFull(),\n        x2 + randomFull(),\n        y2 + randomFull()\n      ]\n    });\n  }\n  return ops;\n}\n\nfunction _curveWithOffset(points: Point[], offset: number, o: ResolvedOptions): Op[] {\n  const ps: Point[] = [];\n  ps.push([\n    points[0][0] + _offsetOpt(offset, o),\n    points[0][1] + _offsetOpt(offset, o),\n  ]);\n  ps.push([\n    points[0][0] + _offsetOpt(offset, o),\n    points[0][1] + _offsetOpt(offset, o),\n  ]);\n  for (let i = 1; i < points.length; i++) {\n    ps.push([\n      points[i][0] + _offsetOpt(offset, o),\n      points[i][1] + _offsetOpt(offset, o),\n    ]);\n    if (i === (points.length - 1)) {\n      ps.push([\n        points[i][0] + _offsetOpt(offset, o),\n        points[i][1] + _offsetOpt(offset, o),\n      ]);\n    }\n  }\n  return _curve(ps, null, o);\n}\n\nfunction _curve(points: Point[], closePoint: Point | null, o: ResolvedOptions): Op[] {\n  const len = points.length;\n  let ops: Op[] = [];\n  if (len > 3) {\n    const b = [];\n    const s = 1 - o.curveTightness;\n    ops.push({ op: 'move', data: [points[1][0], points[1][1]] });\n    for (let i = 1; (i + 2) < len; i++) {\n      const cachedVertArray = points[i];\n      b[0] = [cachedVertArray[0], cachedVertArray[1]];\n      b[1] = [cachedVertArray[0] + (s * points[i + 1][0] - s * points[i - 1][0]) / 6, cachedVertArray[1] + (s * points[i + 1][1] - s * points[i - 1][1]) / 6];\n      b[2] = [points[i + 1][0] + (s * points[i][0] - s * points[i + 2][0]) / 6, points[i + 1][1] + (s * points[i][1] - s * points[i + 2][1]) / 6];\n      b[3] = [points[i + 1][0], points[i + 1][1]];\n      ops.push({ op: 'bcurveTo', data: [b[1][0], b[1][1], b[2][0], b[2][1], b[3][0], b[3][1]] });\n    }\n    if (closePoint && closePoint.length === 2) {\n      const ro = o.maxRandomnessOffset;\n      ops.push({ op: 'lineTo', data: [closePoint[0] + _offsetOpt(ro, o), closePoint[1] + _offsetOpt(ro, o)] });\n    }\n  } else if (len === 3) {\n    ops.push({ op: 'move', data: [points[1][0], points[1][1]] });\n    ops.push({\n      op: 'bcurveTo', data: [\n        points[1][0], points[1][1],\n        points[2][0], points[2][1],\n        points[2][0], points[2][1]]\n    });\n  } else if (len === 2) {\n    ops = ops.concat(_doubleLine(points[0][0], points[0][1], points[1][0], points[1][1], o));\n  }\n  return ops;\n}\n\nfunction _ellipse(increment: number, cx: number, cy: number, rx: number, ry: number, offset: number, overlap: number, o: ResolvedOptions): Op[] {\n  const radOffset = _offsetOpt(0.5, o) - (Math.PI / 2);\n  const points: Point[] = [];\n  points.push([\n    _offsetOpt(offset, o) + cx + 0.9 * rx * Math.cos(radOffset - increment),\n    _offsetOpt(offset, o) + cy + 0.9 * ry * Math.sin(radOffset - increment)\n  ]);\n  for (let angle = radOffset; angle < (Math.PI * 2 + radOffset - 0.01); angle = angle + increment) {\n    points.push([\n      _offsetOpt(offset, o) + cx + rx * Math.cos(angle),\n      _offsetOpt(offset, o) + cy + ry * Math.sin(angle)\n    ]);\n  }\n  points.push([\n    _offsetOpt(offset, o) + cx + rx * Math.cos(radOffset + Math.PI * 2 + overlap * 0.5),\n    _offsetOpt(offset, o) + cy + ry * Math.sin(radOffset + Math.PI * 2 + overlap * 0.5)\n  ]);\n  points.push([\n    _offsetOpt(offset, o) + cx + 0.98 * rx * Math.cos(radOffset + overlap),\n    _offsetOpt(offset, o) + cy + 0.98 * ry * Math.sin(radOffset + overlap)\n  ]);\n  points.push([\n    _offsetOpt(offset, o) + cx + 0.9 * rx * Math.cos(radOffset + overlap * 0.5),\n    _offsetOpt(offset, o) + cy + 0.9 * ry * Math.sin(radOffset + overlap * 0.5)\n  ]);\n  return _curve(points, null, o);\n}\n\nfunction _arc(increment: number, cx: number, cy: number, rx: number, ry: number, strt: number, stp: number, offset: number, o: ResolvedOptions) {\n  const radOffset = strt + _offsetOpt(0.1, o);\n  const points: Point[] = [];\n  points.push([\n    _offsetOpt(offset, o) + cx + 0.9 * rx * Math.cos(radOffset - increment),\n    _offsetOpt(offset, o) + cy + 0.9 * ry * Math.sin(radOffset - increment)\n  ]);\n  for (let angle = radOffset; angle <= stp; angle = angle + increment) {\n    points.push([\n      _offsetOpt(offset, o) + cx + rx * Math.cos(angle),\n      _offsetOpt(offset, o) + cy + ry * Math.sin(angle)\n    ]);\n  }\n  points.push([\n    cx + rx * Math.cos(stp),\n    cy + ry * Math.sin(stp)\n  ]);\n  points.push([\n    cx + rx * Math.cos(stp),\n    cy + ry * Math.sin(stp)\n  ]);\n  return _curve(points, null, o);\n}\n\nfunction _bezierTo(x1: number, y1: number, x2: number, y2: number, x: number, y: number, path: RoughPath, o: ResolvedOptions): Op[] {\n  const ops: Op[] = [];\n  const ros = [o.maxRandomnessOffset || 1, (o.maxRandomnessOffset || 1) + 0.5];\n  let f: Point = [0, 0];\n  for (let i = 0; i < 2; i++) {\n    if (i === 0) {\n      ops.push({ op: 'move', data: [path.x, path.y] });\n    } else {\n      ops.push({ op: 'move', data: [path.x + _offsetOpt(ros[0], o), path.y + _offsetOpt(ros[0], o)] });\n    }\n    f = [x + _offsetOpt(ros[i], o), y + _offsetOpt(ros[i], o)];\n    ops.push({\n      op: 'bcurveTo', data: [\n        x1 + _offsetOpt(ros[i], o), y1 + _offsetOpt(ros[i], o),\n        x2 + _offsetOpt(ros[i], o), y2 + _offsetOpt(ros[i], o),\n        f[0], f[1]\n      ]\n    });\n  }\n  path.setPosition(f[0], f[1]);\n  return ops;\n}\n\nfunction _processSegment(path: RoughPath, seg: Segment, prevSeg: Segment | null, o: ResolvedOptions): Op[] {\n  let ops: Op[] = [];\n  switch (seg.key) {\n    case 'M':\n    case 'm': {\n      const delta = seg.key === 'm';\n      if (seg.data.length >= 2) {\n        let x = +seg.data[0];\n        let y = +seg.data[1];\n        if (delta) {\n          x += path.x;\n          y += path.y;\n        }\n        const ro = 1 * (o.maxRandomnessOffset || 0);\n        x = x + _offsetOpt(ro, o);\n        y = y + _offsetOpt(ro, o);\n        path.setPosition(x, y);\n        ops.push({ op: 'move', data: [x, y] });\n      }\n      break;\n    }\n    case 'L':\n    case 'l': {\n      const delta = seg.key === 'l';\n      if (seg.data.length >= 2) {\n        let x = +seg.data[0];\n        let y = +seg.data[1];\n        if (delta) {\n          x += path.x;\n          y += path.y;\n        }\n        ops = ops.concat(_doubleLine(path.x, path.y, x, y, o));\n        path.setPosition(x, y);\n      }\n      break;\n    }\n    case 'H':\n    case 'h': {\n      const delta = seg.key === 'h';\n      if (seg.data.length) {\n        let x = +seg.data[0];\n        if (delta) {\n          x += path.x;\n        }\n        ops = ops.concat(_doubleLine(path.x, path.y, x, path.y, o));\n        path.setPosition(x, path.y);\n      }\n      break;\n    }\n    case 'V':\n    case 'v': {\n      const delta = seg.key === 'v';\n      if (seg.data.length) {\n        let y = +seg.data[0];\n        if (delta) {\n          y += path.y;\n        }\n        ops = ops.concat(_doubleLine(path.x, path.y, path.x, y, o));\n        path.setPosition(path.x, y);\n      }\n      break;\n    }\n    case 'Z':\n    case 'z': {\n      if (path.first) {\n        ops = ops.concat(_doubleLine(path.x, path.y, path.first[0], path.first[1], o));\n        path.setPosition(path.first[0], path.first[1]);\n        path.first = null;\n      }\n      break;\n    }\n    case 'C':\n    case 'c': {\n      const delta = seg.key === 'c';\n      if (seg.data.length >= 6) {\n        let x1 = +seg.data[0];\n        let y1 = +seg.data[1];\n        let x2 = +seg.data[2];\n        let y2 = +seg.data[3];\n        let x = +seg.data[4];\n        let y = +seg.data[5];\n        if (delta) {\n          x1 += path.x;\n          x2 += path.x;\n          x += path.x;\n          y1 += path.y;\n          y2 += path.y;\n          y += path.y;\n        }\n        const ob = _bezierTo(x1, y1, x2, y2, x, y, path, o);\n        ops = ops.concat(ob);\n        path.bezierReflectionPoint = [x + (x - x2), y + (y - y2)];\n      }\n      break;\n    }\n    case 'S':\n    case 's': {\n      const delta = seg.key === 's';\n      if (seg.data.length >= 4) {\n        let x2 = +seg.data[0];\n        let y2 = +seg.data[1];\n        let x = +seg.data[2];\n        let y = +seg.data[3];\n        if (delta) {\n          x2 += path.x;\n          x += path.x;\n          y2 += path.y;\n          y += path.y;\n        }\n        let x1 = x2;\n        let y1 = y2;\n        const prevKey = prevSeg ? prevSeg.key : '';\n        let ref: Point | null = null;\n        if (prevKey === 'c' || prevKey === 'C' || prevKey === 's' || prevKey === 'S') {\n          ref = path.bezierReflectionPoint;\n        }\n        if (ref) {\n          x1 = ref[0];\n          y1 = ref[1];\n        }\n        const ob = _bezierTo(x1, y1, x2, y2, x, y, path, o);\n        ops = ops.concat(ob);\n        path.bezierReflectionPoint = [x + (x - x2), y + (y - y2)];\n      }\n      break;\n    }\n    case 'Q':\n    case 'q': {\n      const delta = seg.key === 'q';\n      if (seg.data.length >= 4) {\n        let x1 = +seg.data[0];\n        let y1 = +seg.data[1];\n        let x = +seg.data[2];\n        let y = +seg.data[3];\n        if (delta) {\n          x1 += path.x;\n          x += path.x;\n          y1 += path.y;\n          y += path.y;\n        }\n        const offset1 = 1 * (1 + o.roughness * 0.2);\n        const offset2 = 1.5 * (1 + o.roughness * 0.22);\n        ops.push({ op: 'move', data: [path.x + _offsetOpt(offset1, o), path.y + _offsetOpt(offset1, o)] });\n        let f = [x + _offsetOpt(offset1, o), y + _offsetOpt(offset1, o)];\n        ops.push({\n          op: 'qcurveTo', data: [\n            x1 + _offsetOpt(offset1, o), y1 + _offsetOpt(offset1, o),\n            f[0], f[1]\n          ]\n        });\n        ops.push({ op: 'move', data: [path.x + _offsetOpt(offset2, o), path.y + _offsetOpt(offset2, o)] });\n        f = [x + _offsetOpt(offset2, o), y + _offsetOpt(offset2, o)];\n        ops.push({\n          op: 'qcurveTo', data: [\n            x1 + _offsetOpt(offset2, o), y1 + _offsetOpt(offset2, o),\n            f[0], f[1]\n          ]\n        });\n        path.setPosition(f[0], f[1]);\n        path.quadReflectionPoint = [x + (x - x1), y + (y - y1)];\n      }\n      break;\n    }\n    case 'T':\n    case 't': {\n      const delta = seg.key === 't';\n      if (seg.data.length >= 2) {\n        let x = +seg.data[0];\n        let y = +seg.data[1];\n        if (delta) {\n          x += path.x;\n          y += path.y;\n        }\n        let x1 = x;\n        let y1 = y;\n        const prevKey = prevSeg ? prevSeg.key : '';\n        let ref: Point | null = null;\n        if (prevKey === 'q' || prevKey === 'Q' || prevKey === 't' || prevKey === 'T') {\n          ref = path.quadReflectionPoint;\n        }\n        if (ref) {\n          x1 = ref[0];\n          y1 = ref[1];\n        }\n        const offset1 = 1 * (1 + o.roughness * 0.2);\n        const offset2 = 1.5 * (1 + o.roughness * 0.22);\n        ops.push({ op: 'move', data: [path.x + _offsetOpt(offset1, o), path.y + _offsetOpt(offset1, o)] });\n        let f = [x + _offsetOpt(offset1, o), y + _offsetOpt(offset1, o)];\n        ops.push({\n          op: 'qcurveTo', data: [\n            x1 + _offsetOpt(offset1, o), y1 + _offsetOpt(offset1, o),\n            f[0], f[1]\n          ]\n        });\n        ops.push({ op: 'move', data: [path.x + _offsetOpt(offset2, o), path.y + _offsetOpt(offset2, o)] });\n        f = [x + _offsetOpt(offset2, o), y + _offsetOpt(offset2, o)];\n        ops.push({\n          op: 'qcurveTo', data: [\n            x1 + _offsetOpt(offset2, o), y1 + _offsetOpt(offset2, o),\n            f[0], f[1]\n          ]\n        });\n        path.setPosition(f[0], f[1]);\n        path.quadReflectionPoint = [x + (x - x1), y + (y - y1)];\n      }\n      break;\n    }\n    case 'A':\n    case 'a': {\n      const delta = seg.key === 'a';\n      if (seg.data.length >= 7) {\n        const rx = +seg.data[0];\n        const ry = +seg.data[1];\n        const angle = +seg.data[2];\n        const largeArcFlag = +seg.data[3];\n        const sweepFlag = +seg.data[4];\n        let x = +seg.data[5];\n        let y = +seg.data[6];\n        if (delta) {\n          x += path.x;\n          y += path.y;\n        }\n        if (x === path.x && y === path.y) {\n          break;\n        }\n        if (rx === 0 || ry === 0) {\n          ops = ops.concat(_doubleLine(path.x, path.y, x, y, o));\n          path.setPosition(x, y);\n        } else {\n          for (let i = 0; i < 1; i++) {\n            const arcConverter = new RoughArcConverter(\n              [path.x, path.y],\n              [x, y],\n              [rx, ry],\n              angle,\n              largeArcFlag ? true : false,\n              sweepFlag ? true : false\n            );\n            let segment = arcConverter.getNextSegment();\n            while (segment) {\n              const ob = _bezierTo(segment.cp1[0], segment.cp1[1], segment.cp2[0], segment.cp2[1], segment.to[0], segment.to[1], path, o);\n              ops = ops.concat(ob);\n              segment = arcConverter.getNextSegment();\n            }\n          }\n        }\n      }\n      break;\n    }\n    default:\n      break;\n  }\n  return ops;\n}","import { Options, Drawable, OpSet } from './core';\nimport { Point } from './geometry';\nimport { RoughGeneratorBase } from './generator-base';\nimport { line, solidFillPolygon, patternFillPolygon, rectangle, ellipse, patternFillEllipse, linearPath, arc, patternFillArc, curve, svgPath } from './renderer';\n\nexport class RoughGenerator extends RoughGeneratorBase {\n  line(x1: number, y1: number, x2: number, y2: number, options?: Options): Drawable {\n    const o = this._options(options);\n    return this._drawable('line', [line(x1, y1, x2, y2, o)], o);\n  }\n\n  rectangle(x: number, y: number, width: number, height: number, options?: Options): Drawable {\n    const o = this._options(options);\n    const paths = [];\n    if (o.fill) {\n      const points: Point[] = [[x, y], [x + width, y], [x + width, y + height], [x, y + height]];\n      if (o.fillStyle === 'solid') {\n        paths.push(solidFillPolygon(points, o));\n      } else {\n        paths.push(patternFillPolygon(points, o));\n      }\n    }\n    paths.push(rectangle(x, y, width, height, o));\n    return this._drawable('rectangle', paths, o);\n  }\n\n  ellipse(x: number, y: number, width: number, height: number, options?: Options): Drawable {\n    const o = this._options(options);\n    const paths = [];\n    if (o.fill) {\n      if (o.fillStyle === 'solid') {\n        const shape = ellipse(x, y, width, height, o);\n        shape.type = 'fillPath';\n        paths.push(shape);\n      } else {\n        paths.push(patternFillEllipse(x, y, width, height, o));\n      }\n    }\n    paths.push(ellipse(x, y, width, height, o));\n    return this._drawable('ellipse', paths, o);\n  }\n\n  circle(x: number, y: number, diameter: number, options?: Options): Drawable {\n    const ret = this.ellipse(x, y, diameter, diameter, options);\n    ret.shape = 'circle';\n    return ret;\n  }\n\n  linearPath(points: Point[], options?: Options): Drawable {\n    const o = this._options(options);\n    return this._drawable('linearPath', [linearPath(points, false, o)], o);\n  }\n\n  arc(x: number, y: number, width: number, height: number, start: number, stop: number, closed: boolean = false, options?: Options): Drawable {\n    const o = this._options(options);\n    const paths = [];\n    if (closed && o.fill) {\n      if (o.fillStyle === 'solid') {\n        const shape = arc(x, y, width, height, start, stop, true, false, o);\n        shape.type = 'fillPath';\n        paths.push(shape);\n      } else {\n        paths.push(patternFillArc(x, y, width, height, start, stop, o));\n      }\n    }\n    paths.push(arc(x, y, width, height, start, stop, closed, true, o));\n    return this._drawable('arc', paths, o);\n  }\n\n  curve(points: Point[], options?: Options): Drawable {\n    const o = this._options(options);\n    return this._drawable('curve', [curve(points, o)], o);\n  }\n\n  polygon(points: Point[], options?: Options): Drawable {\n    const o = this._options(options);\n    const paths = [];\n    if (o.fill) {\n      if (o.fillStyle === 'solid') {\n        paths.push(solidFillPolygon(points, o));\n      } else {\n        const size = this.computePolygonSize(points);\n        const fillPoints: Point[] = [\n          [0, 0],\n          [size[0], 0],\n          [size[0], size[1]],\n          [0, size[1]]\n        ];\n        const shape = patternFillPolygon(fillPoints, o);\n        shape.type = 'path2Dpattern';\n        shape.size = size;\n        shape.path = this.polygonPath(points);\n        paths.push(shape);\n      }\n    }\n    paths.push(linearPath(points, true, o));\n    return this._drawable('polygon', paths, o);\n  }\n\n  path(d: string, options?: Options): Drawable {\n    const o = this._options(options);\n    const paths: OpSet[] = [];\n    if (!d) {\n      return this._drawable('path', paths, o);\n    }\n    if (o.fill) {\n      if (o.fillStyle === 'solid') {\n        const shape: OpSet = { type: 'path2Dfill', path: d, ops: [] };\n        paths.push(shape);\n      } else {\n        const size = this.computePathSize(d);\n        const points: Point[] = [\n          [0, 0],\n          [size[0], 0],\n          [size[0], size[1]],\n          [0, size[1]]\n        ];\n        const shape = patternFillPolygon(points, o);\n        shape.type = 'path2Dpattern';\n        shape.size = size;\n        shape.path = d;\n        paths.push(shape);\n      }\n    }\n    paths.push(svgPath(d, o));\n    return this._drawable('path', paths, o);\n  }\n}","import { ResolvedOptions, Drawable, OpSet } from './core';\n\nconst hasDocument = typeof document !== 'undefined';\n\nexport abstract class RoughCanvasBase {\n  protected canvas: HTMLCanvasElement;\n  protected ctx: CanvasRenderingContext2D;\n\n  constructor(canvas: HTMLCanvasElement) {\n    this.canvas = canvas;\n    this.ctx = this.canvas.getContext('2d')!;\n  }\n\n  abstract getDefaultOptions(): ResolvedOptions;\n\n  draw(drawable: Drawable) {\n    const sets = drawable.sets || [];\n    const o = drawable.options || this.getDefaultOptions();\n    const ctx = this.ctx;\n    for (const drawing of sets) {\n      switch (drawing.type) {\n        case 'path':\n          ctx.save();\n          ctx.strokeStyle = o.stroke;\n          ctx.lineWidth = o.strokeWidth;\n          this._drawToContext(ctx, drawing);\n          ctx.restore();\n          break;\n        case 'fillPath':\n          ctx.save();\n          ctx.fillStyle = o.fill || '';\n          this._drawToContext(ctx, drawing);\n          ctx.restore();\n          break;\n        case 'fillSketch':\n          this.fillSketch(ctx, drawing, o);\n          break;\n        case 'path2Dfill': {\n          this.ctx.save();\n          this.ctx.fillStyle = o.fill || '';\n          const p2d = new Path2D(drawing.path);\n          this.ctx.fill(p2d);\n          this.ctx.restore();\n          break;\n        }\n        case 'path2Dpattern': {\n          const doc = this.canvas.ownerDocument || (hasDocument && document);\n          if (doc) {\n            const size = drawing.size!;\n            const hcanvas = doc.createElement('canvas');\n            const hcontext = hcanvas.getContext('2d')!;\n            const bbox = this.computeBBox(drawing.path!);\n            if (bbox && (bbox.width || bbox.height)) {\n              hcanvas.width = this.canvas.width;\n              hcanvas.height = this.canvas.height;\n              hcontext.translate(bbox.x || 0, bbox.y || 0);\n            } else {\n              hcanvas.width = size[0];\n              hcanvas.height = size[1];\n            }\n            this.fillSketch(hcontext, drawing, o);\n            this.ctx.save();\n            this.ctx.fillStyle = this.ctx.createPattern(hcanvas, 'repeat')!;\n            const p2d = new Path2D(drawing.path);\n            this.ctx.fill(p2d);\n            this.ctx.restore();\n          } else {\n            console.error('Cannot render path2Dpattern. No defs/document defined.');\n          }\n          break;\n        }\n      }\n    }\n  }\n\n  private computeBBox(d: string): SVGRect | null {\n    if (hasDocument) {\n      try {\n        const ns = 'http://www.w3.org/2000/svg';\n        const svg = document.createElementNS(ns, 'svg');\n        svg.setAttribute('width', '0');\n        svg.setAttribute('height', '0');\n        const pathNode = self.document.createElementNS(ns, 'path');\n        pathNode.setAttribute('d', d);\n        svg.appendChild(pathNode);\n        document.body.appendChild(svg);\n        const bbox = pathNode.getBBox();\n        document.body.removeChild(svg);\n        return bbox;\n      } catch (err) { }\n    }\n    return null;\n  }\n\n  private fillSketch(ctx: CanvasRenderingContext2D, drawing: OpSet, o: ResolvedOptions) {\n    let fweight = o.fillWeight;\n    if (fweight < 0) {\n      fweight = o.strokeWidth / 2;\n    }\n    ctx.save();\n    ctx.strokeStyle = o.fill || '';\n    ctx.lineWidth = fweight;\n    this._drawToContext(ctx, drawing);\n    ctx.restore();\n  }\n\n  private _drawToContext(ctx: CanvasRenderingContext2D, drawing: OpSet) {\n    ctx.beginPath();\n    for (const item of drawing.ops) {\n      const data = item.data;\n      switch (item.op) {\n        case 'move':\n          ctx.moveTo(data[0], data[1]);\n          break;\n        case 'bcurveTo':\n          ctx.bezierCurveTo(data[0], data[1], data[2], data[3], data[4], data[5]);\n          break;\n        case 'qcurveTo':\n          ctx.quadraticCurveTo(data[0], data[1], data[2], data[3]);\n          break;\n        case 'lineTo':\n          ctx.lineTo(data[0], data[1]);\n          break;\n      }\n    }\n    if (drawing.type === 'fillPath') {\n      ctx.fill();\n    } else {\n      ctx.stroke();\n    }\n  }\n}","import { Config, Options, ResolvedOptions, Drawable } from './core';\nimport { RoughGenerator } from './generator';\nimport { Point } from './geometry';\nimport { RoughCanvasBase } from './canvas-base';\n\nexport class RoughCanvas extends RoughCanvasBase {\n  private gen: RoughGenerator;\n\n  constructor(canvas: HTMLCanvasElement, config?: Config) {\n    super(canvas);\n    this.gen = new RoughGenerator(config || null, this.canvas);\n  }\n\n  get generator(): RoughGenerator {\n    return this.gen;\n  }\n\n  getDefaultOptions(): ResolvedOptions {\n    return this.gen.defaultOptions;\n  }\n\n  line(x1: number, y1: number, x2: number, y2: number, options?: Options): Drawable {\n    const d = this.gen.line(x1, y1, x2, y2, options);\n    this.draw(d);\n    return d;\n  }\n\n  rectangle(x: number, y: number, width: number, height: number, options?: Options): Drawable {\n    const d = this.gen.rectangle(x, y, width, height, options);\n    this.draw(d);\n    return d;\n  }\n\n  ellipse(x: number, y: number, width: number, height: number, options?: Options): Drawable {\n    const d = this.gen.ellipse(x, y, width, height, options);\n    this.draw(d);\n    return d;\n  }\n\n  circle(x: number, y: number, diameter: number, options?: Options): Drawable {\n    const d = this.gen.circle(x, y, diameter, options);\n    this.draw(d);\n    return d;\n  }\n\n  linearPath(points: Point[], options?: Options): Drawable {\n    const d = this.gen.linearPath(points, options);\n    this.draw(d);\n    return d;\n  }\n\n  polygon(points: Point[], options?: Options): Drawable {\n    const d = this.gen.polygon(points, options);\n    this.draw(d);\n    return d;\n  }\n\n  arc(x: number, y: number, width: number, height: number, start: number, stop: number, closed: boolean = false, options?: Options): Drawable {\n    const d = this.gen.arc(x, y, width, height, start, stop, closed, options);\n    this.draw(d);\n    return d;\n  }\n\n  curve(points: Point[], options?: Options): Drawable {\n    const d = this.gen.curve(points, options);\n    this.draw(d);\n    return d;\n  }\n\n  path(d: string, options?: Options): Drawable {\n    const drawing = this.gen.path(d, options);\n    this.draw(drawing);\n    return drawing;\n  }\n}","import { Drawable, OpSet, ResolvedOptions } from './core';\n\nconst hasDocument = typeof document !== 'undefined';\n\nexport abstract class RoughSVGBase {\n  protected svg: SVGSVGElement;\n  protected _defs?: SVGDefsElement;\n\n  constructor(svg: SVGSVGElement) {\n    this.svg = svg;\n  }\n\n  abstract getDefaultOptions(): ResolvedOptions;\n\n  abstract opsToPath(drawing: OpSet): string;\n\n  get defs(): SVGDefsElement | null {\n    const doc = this.svg.ownerDocument || (hasDocument && document);\n    if (doc) {\n      if (!this._defs) {\n        const dnode = doc.createElementNS('http://www.w3.org/2000/svg', 'defs');\n        if (this.svg.firstChild) {\n          this.svg.insertBefore(dnode, this.svg.firstChild);\n        } else {\n          this.svg.appendChild(dnode);\n        }\n        this._defs = dnode;\n      }\n    }\n    return this._defs || null;\n  }\n\n  draw(drawable: Drawable): SVGGElement {\n    const sets = drawable.sets || [];\n    const o = drawable.options || this.getDefaultOptions();\n    const doc = this.svg.ownerDocument || window.document;\n    const g = doc.createElementNS('http://www.w3.org/2000/svg', 'g');\n    for (const drawing of sets) {\n      let path = null;\n      switch (drawing.type) {\n        case 'path': {\n          path = doc.createElementNS('http://www.w3.org/2000/svg', 'path');\n          path.setAttribute('d', this.opsToPath(drawing));\n          path.style.stroke = o.stroke;\n          path.style.strokeWidth = o.strokeWidth + '';\n          path.style.fill = 'none';\n          break;\n        }\n        case 'fillPath': {\n          path = doc.createElementNS('http://www.w3.org/2000/svg', 'path');\n          path.setAttribute('d', this.opsToPath(drawing));\n          path.style.stroke = 'none';\n          path.style.strokeWidth = '0';\n          path.style.fill = o.fill || null;\n          break;\n        }\n        case 'fillSketch': {\n          path = this.fillSketch(doc, drawing, o);\n          break;\n        }\n        case 'path2Dfill': {\n          path = doc.createElementNS('http://www.w3.org/2000/svg', 'path');\n          path.setAttribute('d', drawing.path || '');\n          path.style.stroke = 'none';\n          path.style.strokeWidth = '0';\n          path.style.fill = o.fill || null;\n          break;\n        }\n        case 'path2Dpattern': {\n          if (!this.defs) {\n            console.error('Cannot render path2Dpattern. No defs/document defined.');\n          } else {\n            const size = drawing.size!;\n            const pattern = doc.createElementNS('http://www.w3.org/2000/svg', 'pattern');\n            const id = `rough-${Math.floor(Math.random() * (Number.MAX_SAFE_INTEGER || 999999))}`;\n            pattern.setAttribute('id', id);\n            pattern.setAttribute('x', '0');\n            pattern.setAttribute('y', '0');\n            pattern.setAttribute('width', '1');\n            pattern.setAttribute('height', '1');\n            pattern.setAttribute('height', '1');\n            pattern.setAttribute('viewBox', `0 0 ${Math.round(size[0])} ${Math.round(size[1])}`);\n            pattern.setAttribute('patternUnits', 'objectBoundingBox');\n            const patternPath = this.fillSketch(doc, drawing, o);\n            pattern.appendChild(patternPath);\n            this.defs!.appendChild(pattern);\n\n            path = doc.createElementNS('http://www.w3.org/2000/svg', 'path');\n            path.setAttribute('d', drawing.path || '');\n            path.style.stroke = 'none';\n            path.style.strokeWidth = '0';\n            path.style.fill = `url(#${id})`;\n          }\n          break;\n        }\n      }\n      if (path) {\n        g.appendChild(path);\n      }\n    }\n    return g;\n  }\n\n  private fillSketch(doc: Document, drawing: OpSet, o: ResolvedOptions): SVGPathElement {\n    let fweight = o.fillWeight;\n    if (fweight < 0) {\n      fweight = o.strokeWidth / 2;\n    }\n    const path = doc.createElementNS('http://www.w3.org/2000/svg', 'path');\n    path.setAttribute('d', this.opsToPath(drawing));\n    path.style.stroke = o.fill || null;\n    path.style.strokeWidth = fweight + '';\n    path.style.fill = 'none';\n    return path;\n  }\n}","import { Config, Options, OpSet, ResolvedOptions } from './core';\nimport { RoughGenerator } from './generator';\nimport { Point } from './geometry';\nimport { RoughSVGBase } from './svg-base';\n\nexport class RoughSVG extends RoughSVGBase {\n  private gen: RoughGenerator;\n\n  constructor(svg: SVGSVGElement, config?: Config) {\n    super(svg);\n    this.gen = new RoughGenerator(config || null, this.svg);\n  }\n\n  get generator(): RoughGenerator {\n    return this.gen;\n  }\n\n  getDefaultOptions(): ResolvedOptions {\n    return this.gen.defaultOptions;\n  }\n\n  opsToPath(drawing: OpSet): string {\n    return this.gen.opsToPath(drawing);\n  }\n\n  line(x1: number, y1: number, x2: number, y2: number, options?: Options): SVGGElement {\n    const d = this.gen.line(x1, y1, x2, y2, options);\n    return this.draw(d);\n  }\n\n  rectangle(x: number, y: number, width: number, height: number, options?: Options): SVGGElement {\n    const d = this.gen.rectangle(x, y, width, height, options);\n    return this.draw(d);\n  }\n\n  ellipse(x: number, y: number, width: number, height: number, options?: Options): SVGGElement {\n    const d = this.gen.ellipse(x, y, width, height, options);\n    return this.draw(d);\n  }\n\n  circle(x: number, y: number, diameter: number, options?: Options): SVGGElement {\n    const d = this.gen.circle(x, y, diameter, options);\n    return this.draw(d);\n  }\n\n  linearPath(points: Point[], options?: Options): SVGGElement {\n    const d = this.gen.linearPath(points, options);\n    return this.draw(d);\n  }\n\n  polygon(points: Point[], options?: Options): SVGGElement {\n    const d = this.gen.polygon(points, options);\n    return this.draw(d);\n  }\n\n  arc(x: number, y: number, width: number, height: number, start: number, stop: number, closed: boolean = false, options?: Options): SVGGElement {\n    const d = this.gen.arc(x, y, width, height, start, stop, closed, options);\n    return this.draw(d);\n  }\n\n  curve(points: Point[], options?: Options): SVGGElement {\n    const d = this.gen.curve(points, options);\n    return this.draw(d);\n  }\n\n  path(d: string, options?: Options): SVGGElement {\n    const drawing = this.gen.path(d, options);\n    return this.draw(drawing);\n  }\n}","import { Config, DrawingSurface } from '../core';\nimport { RoughCanvas } from '../canvas';\nimport { RoughGenerator } from '../generator';\nimport { RoughSVG } from '../svg';\n\nexport default {\n  canvas(canvas: HTMLCanvasElement, config?: Config): RoughCanvas {\n    return new RoughCanvas(canvas, config);\n  },\n\n  svg(svg: SVGSVGElement, config?: Config): RoughSVG {\n    return new RoughSVG(svg, config);\n  },\n\n  generator(config: Config | null, surface: DrawingSurface): RoughGenerator {\n    return new RoughGenerator(config, surface);\n  }\n};","import * as React from \"react\";\nimport {StyleSheet, css} from \"aphrodite/no-important\";\n\ninterface InternalLineDrawingProps {\n    delay: number;\n    duration: number;\n\n    /// If true, do not render a wrapping svg.\n    bare?: boolean;\n\n    /// The title of the SVG, or `null` if it should be hidden to\n    /// screenreaders.\n    title: string | null;\n\n    /// A longer description, for screenreaders, if this is a complex\n    /// drawing.\n    desc?: string;\n\n    d: string;\n    pathStyle: React.CSSProperties;\n    pathClassName?: string;\n    // If true, we don't alternate directions for every path.\n    consistentDirection?: boolean;\n    className?: string;\n    style?: React.CSSProperties;\n    width?: number;\n    height?: number;\n    delayRatio?: number;\n}\n\ntype State = {\n    paths: string[];\n    pathLengths: number[];\n    uniqueId: string | null;\n};\n\nexport default class InternalLineDrawing extends React.PureComponent<\n    InternalLineDrawingProps\n> {\n    state: State = {\n        pathLengths: [],\n        paths: [],\n        uniqueId: null,\n    };\n\n    render() {\n        const {\n            title,\n            delay,\n            duration,\n            pathStyle,\n            consistentDirection,\n            className,\n            style,\n            width,\n            height,\n            delayRatio,\n            desc,\n            bare,\n            pathClassName,\n        } = this.props;\n\n        const {paths, pathLengths, uniqueId} = this.state;\n        let durationMultiplier = 1.0 - (delayRatio || 0);\n\n        const contents = paths.map((path, i) => (\n            <path\n                key={`${i}_${duration}_${durationMultiplier}_${delay}_${\n                    pathLengths[i]\n                }`}\n                style={{\n                    ...pathStyle,\n                    strokeDasharray: pathLengths[i],\n                    strokeDashoffset:\n                        (i % 2 === 0 || consistentDirection ? 1 : -1) *\n                        pathLengths[i],\n                    animationDelay: `${delay +\n                        (i * duration) / paths.length}ms`,\n                    animationDuration: `${(duration * durationMultiplier) /\n                        paths.length}ms`,\n                }}\n                className={`${css(styles.animatedLine)} ${pathClassName || \"\"}`}\n                d={path}\n            />\n        ));\n\n        if (bare) {\n            return contents;\n        }\n\n        return (\n            <svg\n                viewBox={width && height ? `0 0 ${width} ${height}` : undefined}\n                className={\n                    className == null ? css(styles.absoluteOverlay) : className\n                }\n                style={style}\n                preserveAspectRatio=\"xMidYMid meet\"\n                aria-hidden={title === null ? true : false}\n                aria-labelledby={`${uniqueId}_title ${uniqueId}_desc`}\n            >\n                {title && uniqueId ? (\n                    <title id={`${uniqueId}_title`}>{title}</title>\n                ) : null}\n                {desc && uniqueId ? (\n                    <desc id={`${uniqueId}_desc`}>{desc}</desc>\n                ) : null}\n                <g>{contents}</g>\n            </svg>\n        );\n    }\n\n    componentDidMount() {\n        this.setState({\n            uniqueId: `_khannotations_LineDrawing_${Math.random()}`,\n        });\n    }\n\n    static getDerivedStateFromProps(\n        props: InternalLineDrawingProps,\n        state: State,\n    ): State {\n        const pathEl = document.createElementNS(\n            \"http://www.w3.org/2000/svg\",\n            \"path\",\n        );\n        const paths = props.d\n            .split(\"M\")\n            .slice(1)\n            .map(p => `M${p}`);\n        const pathLengths = paths.map(pathD => {\n            pathEl.setAttribute(\"d\", pathD);\n            return pathEl.getTotalLength();\n        });\n\n        return {\n            pathLengths,\n            paths,\n            uniqueId: state.uniqueId,\n        };\n    }\n}\n\nconst lineAnimation = {\n    to: {\n        strokeDashoffset: 0,\n    },\n};\n\nconst styles = StyleSheet.create({\n    animatedLine: {\n        animationName: lineAnimation,\n        animationTimingFunction: \"linear\",\n        animationFillMode: \"forwards\",\n        animationEasingFunction: \"ease-in-out\",\n    },\n    absoluteOverlay: {\n        overflow: \"visible\",\n        position: \"absolute\",\n        left: 0,\n        top: 0,\n        // Chrome/Safari do not render anything with width/height 0\n        width: 1,\n        height: 1,\n        pointerEvents: \"none\",\n    },\n});\n","import * as React from \"react\";\nimport rough from \"./vendor/rough/src/wrappers/rough\";\nimport {Options as RoughJSOptions} from \"./vendor/rough/src/core\";\nimport InternalLineDrawing from \"./_LineDrawing\";\n\ntype Props = RoughJSOptions & {\n    x1: number;\n    x2: number;\n    y1: number;\n    y2: number;\n    duration: number;\n    delay: number;\n};\n\ntype State = {\n    d: string | null;\n    pathStyle: {[key: string]: string | number};\n};\n\nexport default class RoughLine extends React.PureComponent<Props, State> {\n    state: State = {\n        d: null,\n        pathStyle: {},\n    };\n\n    render() {\n        const {delay, duration} = this.props;\n        const {d, pathStyle} = this.state;\n        return (\n            d && (\n                <InternalLineDrawing\n                    title={null}\n                    delay={delay}\n                    duration={duration}\n                    d={d}\n                    pathStyle={pathStyle}\n                />\n            )\n        );\n    }\n\n    componentDidMount() {\n        this._reset();\n    }\n\n    componentDidUpdate(prevProps: Props) {\n        let {x1, y1, x2, y2} = this.props;\n\n        if (\n            x1 !== prevProps.x1 ||\n            x2 !== prevProps.x2 ||\n            y1 !== prevProps.y1 ||\n            y2 !== prevProps.y2\n        ) {\n            this._reset();\n        }\n    }\n\n    _reset = () => {\n        let {\n            x1,\n            y1,\n            x2,\n            y2,\n            duration,\n            delay,\n            stroke,\n            strokeWidth,\n            ...roughJsOptions\n        } = this.props;\n        if (isNaN(x1) || isNaN(x2) || isNaN(y1) || isNaN(y2)) {\n            return;\n        }\n\n        let roughG = rough.generator(null, null as any);\n        let line = roughG.line(x1, y1, x2, y2, roughJsOptions);\n        this.setState({\n            d: roughG.opsToPath(line.sets[0]),\n            pathStyle: {\n                stroke: stroke || \"black\",\n                strokeWidth: strokeWidth || 1,\n                fill: \"none\",\n            },\n        });\n    };\n}\n","/**\n * Return true if we are using IE 11 or below.\n *\n * Returns false if we are Edge, or any other browser.\n */\nexport default function isIE(): boolean {\n    var ua = window.navigator.userAgent; //Check the userAgent property of the window.navigator object\n    var msie = ua.indexOf(\"MSIE \"); // IE 10 or older\n    var trident = ua.indexOf(\"Trident/\"); //IE 11\n\n    return msie > 0 || trident > 0;\n}\n","import * as React from \"react\";\nimport isIE from \"./_isIE\";\n\ntype Rect = {\n    top: number;\n    bottom: number;\n    left: number;\n    right: number;\n};\n\ntype Props = {\n    text: React.ReactChild | Array<React.ReactChild>;\n    children: (lines: Array<Rect>) => React.ReactNode;\n};\n\ntype State = {\n    lines: Array<Rect>;\n    style: any;\n};\n\nexport function cumulativeOffset(element: HTMLElement | null) {\n    if (!element) {\n        return {\n            top: 0,\n            left: 0,\n        };\n    }\n\n    return {\n        top: element.offsetTop || 0,\n        left: element.offsetLeft || 0,\n    };\n}\n\nexport default class MeasureLines extends React.Component<Props> {\n    state: State = {\n        lines: [],\n        style: {},\n    };\n    _nodes: Array<HTMLElement | null> = [];\n    _interval: NodeJS.Timeout | null = null;\n\n    componentDidMount() {\n        this._interval = setInterval(() => {\n            let lineByBottom = this._nodes.reduce(\n                (memo, node) => {\n                    if (!node) {\n                        return memo;\n                    }\n\n                    const {width, height} = node.getBoundingClientRect();\n                    // These numbers are relative to the nearest\n                    // \"position: relative\" parent.\n                    const left = node.offsetLeft;\n                    const bottom = node.offsetTop + height;\n                    const right = node.offsetLeft + width;\n\n                    memo[bottom] = memo[bottom] || {\n                        left: Infinity,\n                        right: -Infinity,\n                        top: Infinity,\n                        bottom,\n                    };\n                    memo[bottom].left = Math.min(memo[bottom].left, left);\n                    memo[bottom].right = Math.max(memo[bottom].right, right);\n                    memo[bottom].top = Math.min(\n                        memo[bottom].top,\n                        node.offsetTop,\n                    );\n                    memo[bottom].bottom = bottom;\n\n                    return memo;\n                },\n                {} as {[bottom: number]: Rect},\n            );\n\n            let lineBottoms = Object.keys(lineByBottom).map(b => parseFloat(b));\n            lineBottoms.sort((a, b) => a - b);\n            let lines = lineBottoms.map(bottom => lineByBottom[bottom]);\n\n            if (\n                lines.length !== this.state.lines.length ||\n                lines.some(\n                    (line, idx) =>\n                        line.bottom !== this.state.lines[idx].bottom ||\n                        line.left !== this.state.lines[idx].left ||\n                        line.top !== this.state.lines[idx].top ||\n                        line.right !== this.state.lines[idx].right,\n                )\n            ) {\n                this.setState({lines});\n            }\n        }, 50);\n    }\n\n    componentWillUnmount() {\n        if (this._interval) {\n            clearInterval(this._interval);\n            this._interval = null;\n        }\n    }\n    render() {\n        const {children, text} = this.props;\n\n        if (isIE()) {\n            return <span style={{position: \"relative\"}}>{text}</span>;\n        }\n\n        const nodes: Array<React.ReactNode> = [];\n\n        React.Children.forEach(text, child => {\n            if (typeof child === \"string\") {\n                child.split(/\\s/g).forEach(word => {\n                    nodes.push(word);\n                });\n            } else {\n                nodes.push(child);\n            }\n        });\n\n        const fragments = nodes.map((node, i) => (\n            <React.Fragment key={i}>\n                <span\n                    style={{position: \"relative\"}}\n                    ref={ref => (this._nodes[i] = ref)}\n                >\n                    {node}\n                </span>\n                {i + 1 !== nodes.length && \" \"}\n            </React.Fragment>\n        ));\n\n        return (\n            <>\n                {this.state.lines.length ? children(this.state.lines) : null}\n                {fragments}\n            </>\n        );\n    }\n}\n","import * as React from \"react\";\n\nimport RoughLine from \"./_RoughLine\";\nimport MeasureLines from \"./_MeasureLines\";\nimport {\n    AnimationGroup,\n    Animate,\n    ConnectToAnimationGroup,\n} from \"./AnimationGroup\";\nimport {AnimationStrategy} from \"./AnimationStrategy\";\n\n/**\n * The line has a fixed \"bowed\" value.\n */\nexport interface BowingStrategyFixed {\n    bowing: \"fixed\";\n    /**\n     * Numerical value indicating how curvy the lines are when drawing a\n     * sketch. A value of 0 will cause straight lines.\n     *\n     * 1 is a reasonable value.\n     */\n    amount: number;\n}\n\n/**\n * The longer the line, the less curved it is.\n */\nexport interface BowingStrategyInverse {\n    bowing: \"inverse\";\n\n    /**\n     * Bowing amount per inverse pixel.\n     *\n     * A typical value is 300.\n     */\n    ratio: number;\n}\n\n/**\n * Define how to resolve how bowed (curved) the underline is.\n */\nexport type BowingStrategy = BowingStrategyFixed | BowingStrategyInverse;\n\n/**\n * Define what the underline looks like.\n */\nexport interface UnderlineStyle {\n    /**\n     * Numerical value indicating how rough the drawing is. A rectangle with\n     * the roughness of 0 would be a perfect rectangle.\n     *\n     * There is no upper limit to this value, but a value over 10 is mostly\n     * useless.\n     */\n    roughness: number;\n    /**\n     * String value representing the color of the drawn objects.\n     */\n    stroke: string;\n    /**\n     * Numerical value to set the width of the strokes (in pixels).\n     *\n     * Can be specicied in any of the\n     * [ways to describe color in CSS](https://developer.mozilla.org/en-US/docs/Web/HTML/Applying_color#How_to_describe_a_color).\n     */\n    strokeWidth: number;\n    /**\n     * Determines how curvy the line is.\n     */\n    bowing: BowingStrategy;\n    /**\n     * Numerical value to set how high above the bottom of the bounding box\n     * the underline is (in pixels).\n     */\n    lift: number;\n}\n\n/**\n * Props for [[RoughUnderline]].\n */\nexport interface RoughUnderlineProps {\n    /**\n     * The rules to describe how quickly this component should animate.\n     */\n    animation: AnimationStrategy;\n    roughStyle: UnderlineStyle;\n    children: React.ReactChild | Array<React.ReactChild>;\n}\n\ntype State = {\n    triggered: boolean;\n};\n\n/**\n * Connected implementation of [[RoughUnderline]].\n */\nclass _RoughUnderline\n    extends React.Component<\n        RoughUnderlineProps & {group: AnimationGroup | null},\n        State\n    >\n    implements Animate {\n    /** @hidden */\n    state: State = {\n        triggered: false,\n    };\n\n    trigger = () => {\n        this.setState({\n            triggered: true,\n        });\n    };\n\n    estimatedDuration: number | null = null;\n\n    /** @hidden */\n    componentDidMount() {\n        if (this.props.group) {\n            this.props.group.register(this);\n        }\n    }\n\n    /** @hidden */\n    componentDidUpdate(\n        prevProps: RoughUnderlineProps & {group: AnimationGroup | null},\n    ) {\n        if (this.props.group !== prevProps.group) {\n            if (prevProps.group) {\n                prevProps.group.unregister(this);\n            }\n            if (this.props.group) {\n                this.props.group.register(this);\n            }\n        }\n    }\n\n    /** @hidden */\n    componentWillUnmount() {\n        if (this.props.group) {\n            this.props.group.unregister(this);\n        }\n    }\n    /** @hidden */\n    render() {\n        const {animation, roughStyle, children, group} = this.props;\n\n        return (\n            <MeasureLines text={children}>\n                {lines => {\n                    let durations: Array<number>;\n                    let gap: number;\n\n                    let totalLength = lines.reduce(\n                        (memo, line) => memo + line.right - line.left,\n                        0,\n                    );\n\n                    if (animation.animation === \"none\") {\n                        durations = lines.map(() => 0);\n                    } else if (animation.animation === \"duration\") {\n                        gap = Math.min(\n                            100,\n                            (animation.duration / lines.length) * 0.05,\n                        );\n\n                        let animateTime =\n                            animation.duration - gap * (lines.length - 1);\n\n                        durations = lines.map(\n                            line =>\n                                ((line.right - line.left) / totalLength) *\n                                animateTime,\n                        );\n                    } else if (animation.animation === \"speed\") {\n                        gap = 100;\n                        durations = lines.map(\n                            line =>\n                                ((line.right - line.left) * 10) /\n                                animation.speed,\n                        );\n                    } else {\n                        throw new Error(\"Invalid animation type.\");\n                    }\n\n                    let timeSoFar =\n                        animation.animation === \"none\" ? 0 : animation.delay;\n\n                    let delays = lines.map((line, i) => {\n                        let myDelay = timeSoFar;\n                        timeSoFar += durations[i] + gap;\n                        return myDelay;\n                    });\n\n                    if (group && !this.state.triggered) {\n                        this.estimatedDuration = timeSoFar;\n                        group.register(this);\n                        return null;\n                    }\n\n                    return (\n                        <>\n                            {lines.map(({left, right, bottom}, i) => {\n                                let bowing;\n                                if (roughStyle.bowing.bowing === \"fixed\") {\n                                    bowing = roughStyle.bowing.amount;\n                                } else {\n                                    bowing =\n                                        roughStyle.bowing.ratio /\n                                        (right - left);\n                                }\n\n                                return (\n                                    <RoughLine\n                                        key={i}\n                                        x1={left}\n                                        x2={right}\n                                        y1={bottom - roughStyle.lift}\n                                        y2={bottom - roughStyle.lift}\n                                        roughness={roughStyle.roughness}\n                                        stroke={roughStyle.stroke}\n                                        strokeWidth={roughStyle.strokeWidth}\n                                        duration={durations[i]}\n                                        delay={delays[i]}\n                                        bowing={bowing}\n                                    />\n                                );\n                            })}\n                        </>\n                    );\n                }}\n            </MeasureLines>\n        );\n    }\n}\n\n/**\n * Draw an animated underline underneath some inline text.\n *\n * ![Screen capture](media://RoughUnderline.gif)\n *\n * **Props**: [[RoughUnderlineProps]]\n *\n * @noInheritDoc\n */\nexport class RoughUnderline extends React.Component<RoughUnderlineProps> {\n    /** @hidden */\n    render() {\n        const {props} = this;\n\n        return (\n            <ConnectToAnimationGroup>\n                {group => <_RoughUnderline group={group} {...props} />}\n            </ConnectToAnimationGroup>\n        );\n    }\n}\n","import * as React from \"react\";\nimport rough from \"./vendor/rough/src/wrappers/rough\";\nimport {Options as RoughJSOptions} from \"./vendor/rough/src/core\";\nimport InternalLineDrawing from \"./_LineDrawing\";\n\ntype Props = RoughJSOptions & {\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n    duration: number;\n    delay: number;\n};\n\ntype State = {\n    d: string | null;\n    pathStyle: {[key: string]: any};\n};\n\nexport default class RoughEllipse extends React.PureComponent<Props> {\n    state: State = {\n        d: null,\n        pathStyle: {},\n    };\n\n    render() {\n        const {delay, duration} = this.props;\n        const {d, pathStyle} = this.state;\n        return (\n            d && (\n                <InternalLineDrawing\n                    title={null}\n                    delay={delay}\n                    duration={duration}\n                    d={d}\n                    pathStyle={pathStyle}\n                    consistentDirection={true}\n                />\n            )\n        );\n    }\n\n    componentDidMount() {\n        this._reset();\n    }\n\n    componentDidUpdate(prevProps: Props) {\n        let {x, y, width, height} = this.props;\n\n        if (\n            x !== prevProps.x ||\n            y !== prevProps.y ||\n            width !== prevProps.width ||\n            height !== prevProps.height\n        ) {\n            this._reset();\n        }\n    }\n\n    _reset = () => {\n        let {\n            x,\n            y,\n            width,\n            height,\n            duration,\n            delay,\n            stroke,\n            strokeWidth,\n            ...roughJsOptions\n        } = this.props;\n        if (isNaN(x) || isNaN(y) || isNaN(width) || isNaN(height)) {\n            return;\n        }\n\n        let roughG = rough.generator(null, null as any);\n        const ellipse = roughG.ellipse(x, y, width, height, roughJsOptions);\n        this.setState({\n            d: roughG.opsToPath(ellipse.sets[0]),\n            pathStyle: {\n                stroke: stroke || \"black\",\n                strokeWidth: strokeWidth || 1,\n                fill: \"none\",\n            },\n        });\n    };\n}\n","import * as React from \"react\";\nimport {cumulativeOffset} from \"./_MeasureLines\";\nimport RoughEllipse from \"./_RoughEllipse\";\nimport {StyleSheet, css} from \"aphrodite/no-important\";\nimport getRoots from \"durand-kerner\";\nimport isIE from \"./_isIE\";\nimport {\n    AnimationGroup,\n    Animate,\n    ConnectToAnimationGroup,\n} from \"./AnimationGroup\";\n\n/**\n * Define what the ellipse drawn looks like.\n */\nexport interface RoughCircledBoxStyle {\n    /**\n     * Numerical value indicating how rough the drawing is. A rectangle with\n     * the roughness of 0 would be a perfect rectangle.\n     *\n     * There is no upper limit to this value, but a value over 10 is mostly\n     * useless.\n     */\n    roughness: number;\n    /**\n     * String value representing the color of the drawn objects.\n     *\n     * Can be specicied in any of the\n     * [ways to describe color in CSS](https://developer.mozilla.org/en-US/docs/Web/HTML/Applying_color#How_to_describe_a_color).\n     */\n    stroke: string;\n    /**\n     * Numerical value to set the width of the strokes (in pixels).\n     */\n    strokeWidth: number;\n}\n\n/**\n * Calculate the dimensions of an ellipse that bounds the provided rectangle.\n *\n * (w, h) represents the width and height of a rectangle centered around an\n * arbitrary point.\n *\n * The values (a, b) represent the horizontal and vertical *RADII* of an\n * ellipse that, if centered around the same point, bounds the rectangle.\n *\n * This is somewhat slow to calculate because it uses durand-kerner, and\n * so the result should be memozied.\n */\nfunction getEllipseBoundingRectangle(\n    w: number,\n    h: number,\n): {a: number; b: number} {\n    // This simplifies our arithmetic.\n    let d = h - w;\n\n    // From https://math.stackexchange.com/questions/623922/ellipse-bounding-rectangle/623933#623933 we know that:\n    //\n    //  [1] b = a + 1/2 * d\n    //  [2] w^2/(2a^2) + h^2/(2a+d)^2 = 1\n\n    // Expanding and rearranging [2], we get:\n    //  16*a^4 + 16*d*a^3 + (4*d^2 - 4*b^2 - 4*w^2)*a^2 - 4*d*w^2*a - w^2*d^2\n    //  = 0\n\n    // This can be rearranged into a quartic, which we can get the roots for.\n    // (Note: x^0 is the first coefficient and x^4 is the last)\n    let roots = getRoots([\n        -w * w * d * d,\n        -4 * d * w * w,\n        4 * d * d - 4 * h * h - 4 * w * w,\n        16 * d,\n        16,\n    ]);\n\n    // The real parts are stored in roots[0] and the imaginary parts are stored\n    // in roots[1]. I think there is only ever one real positive solution. If\n    // I'm wrong, we pick the wider one.\n    let a = 0;\n    for (let i = 0; i < roots[0].length; ++i) {\n        if (Math.abs(roots[1][i]) < 1e5) {\n            a = Math.max(a, roots[0][i]);\n        }\n    }\n\n    let b = a + 0.5 * d;\n\n    return {\n        a,\n        b,\n    };\n}\n\n/**\n * Props for [[RoughCircledBox]]\n */\nexport interface RoughCircledBoxProps {\n    delay: number;\n    children: React.ReactNode | React.ReactNodeArray;\n    roughStyle: RoughCircledBoxStyle;\n    marginLeft?: number;\n    marginRight?: number;\n    marginTop?: number;\n    marginBottom?: number;\n}\n\ntype State = {\n    triggered: boolean;\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n    a: number;\n    b: number;\n    marginLeft: number;\n    marginRight: number;\n    marginTop: number;\n    marginBottom: number;\n};\n\n/**\n * Connected implementation of [[RoughCircledBox]].\n */\nclass _RoughCircledBox\n    extends React.Component<\n        RoughCircledBoxProps & {group: AnimationGroup | null},\n        State\n    >\n    implements Animate {\n    /** @ignore */\n    state: State = {\n        triggered: false,\n        x: NaN,\n        y: NaN,\n        width: NaN,\n        height: NaN,\n        a: NaN,\n        b: NaN,\n        marginLeft: NaN,\n        marginRight: NaN,\n        marginTop: NaN,\n        marginBottom: NaN,\n    };\n\n    trigger = () => {\n        this.setState({\n            triggered: true,\n        });\n    };\n\n    estimatedDuration: number | null = null;\n\n    private _node: HTMLParagraphElement | null = null;\n    private _interval: NodeJS.Timer | null = null;\n\n    /** @ignore */\n    componentDidMount() {\n        if (isIE()) {\n            return;\n        }\n\n        this._interval = setInterval(() => {\n            if (this._node) {\n                let offset = cumulativeOffset(this._node);\n                const boundingRect = this._node.getBoundingClientRect();\n                const marginBottom = this.props.marginBottom || 0;\n                const marginLeft = this.props.marginLeft || 0;\n                const marginRight = this.props.marginRight || 0;\n                const marginTop = this.props.marginTop || 0;\n                const x =\n                    offset.left +\n                    boundingRect.width / 2 -\n                    marginLeft / 2 +\n                    marginRight / 2;\n                const y =\n                    offset.top +\n                    boundingRect.height / 2 -\n                    marginTop / 2 +\n                    marginBottom / 2;\n\n                const width = boundingRect.width + marginLeft + marginRight;\n                const height = boundingRect.height + marginTop + marginBottom;\n\n                if (\n                    x !== this.state.x ||\n                    y !== this.state.y ||\n                    width !== this.state.width ||\n                    height !== this.state.height ||\n                    marginBottom !== this.state.marginBottom ||\n                    marginLeft !== this.state.marginLeft ||\n                    marginRight !== this.state.marginRight ||\n                    marginTop !== this.state.marginTop\n                ) {\n                    let bb = getEllipseBoundingRectangle(width, height);\n\n                    this.setState({\n                        x,\n                        y,\n                        width,\n                        height,\n                        a: bb.a,\n                        b: bb.b,\n                        marginBottom,\n                        marginLeft,\n                        marginRight,\n                        marginTop,\n                    });\n                }\n            }\n        }, 500);\n    }\n\n    /** @ignore */\n    componentWillUnmount() {\n        if (this._interval) {\n            clearInterval(this._interval);\n            this._interval = null;\n        }\n\n        if (this.props.group) {\n            this.props.group.unregister(this);\n        }\n    }\n\n    /** @ignore */\n    render() {\n        const {children, delay, roughStyle, group} = this.props;\n        const {x, y, a, b} = this.state;\n\n        if (isIE()) {\n            return children;\n        }\n\n        if (group && !this.state.triggered) {\n            // TODO(joshuan): Do not hardcode this\n            this.estimatedDuration = 400;\n            group.register(this);\n        }\n\n        return (\n            <div\n                ref={node => (this._node = node)}\n                className={css(styles.paragraph)}\n            >\n                {children}\n                {!isNaN(x) &&\n                    !isNaN(y) &&\n                    !isNaN(a) &&\n                    !isNaN(b) &&\n                    (!group || this.state.triggered) && (\n                        <RoughEllipse\n                            x={x}\n                            y={y}\n                            width={a * 2}\n                            height={b * 2}\n                            roughness={roughStyle.roughness}\n                            stroke={roughStyle.stroke}\n                            strokeWidth={roughStyle.strokeWidth}\n                            duration={400}\n                            delay={delay}\n                        />\n                    )}\n            </div>\n        );\n    }\n}\n\nconst styles = StyleSheet.create({\n    paragraph: {\n        display: \"inline-block\",\n    },\n});\n\n/**\n * Render an inline-block element that has a rough ellipse around it.\n *\n * The ellipse is calculated to just touch the rendered block element, but\n * you can give the ellipse more or less space by adjusting the margins.\n *\n * ![Screen capture](media://RoughCircledBox.gif)\n *\n * **Props**: [[RoughCircledBoxProps]]\n *\n * @noInheritDoc\n */\nexport class RoughCircledBox extends React.Component<RoughCircledBoxProps> {\n    /** @hidden */\n    render() {\n        const {props} = this;\n\n        return (\n            <ConnectToAnimationGroup>\n                {group => <_RoughCircledBox group={group} {...props} />}\n            </ConnectToAnimationGroup>\n        );\n    }\n}\n","import * as React from \"react\";\nimport {StyleSheet, css} from \"aphrodite/no-important\";\nimport rough from \"./vendor/rough/src/wrappers/rough\";\nimport {Options as RoughJSOptions} from \"./vendor/rough/src/core\";\n\ntype Props = RoughJSOptions & {\n    duration: number;\n    delay: number;\n    x1: number;\n    x2: number;\n    y1: number;\n    y2: number;\n};\n\ntype State = {\n    paths: string[];\n    pathLengths: number[];\n    pathStyle: {[key: string]: any};\n};\n\nexport default class RoughRectangle extends React.Component<Props, State> {\n    state: State = {\n        paths: [],\n        pathLengths: [],\n        pathStyle: {},\n    };\n    _svg: SVGSVGElement | null = null;\n\n    render() {\n        const {delay, duration, x1, y1, fillStyle} = this.props;\n        const {paths, pathLengths, pathStyle} = this.state;\n        return (\n            <svg\n                ref={svg => (this._svg = svg)}\n                className={css(styles.absoluteOverlay)}\n                aria-hidden={true}\n            >\n                <g>\n                    {paths.map((path, i) => (\n                        <path\n                            style={{\n                                ...pathStyle,\n                                strokeDasharray: pathLengths[i] + 10,\n                                strokeDashoffset:\n                                    (i % 2 ? -1 : 1) * (pathLengths[i] + 10),\n                                transformOrigin: `${x1}px ${y1}px`,\n                                animationDelay: `${delay +\n                                    (i * duration) / paths.length}ms`,\n                                animationDuration: `${duration /\n                                    paths.length}ms`,\n                                transform:\n                                    fillStyle === \"solid\"\n                                        ? \"scaleX(0)\"\n                                        : undefined,\n                            }}\n                            className={css(\n                                fillStyle === \"solid\"\n                                    ? styles.animatedFill\n                                    : styles.animatedStroke,\n                            )}\n                            key={i}\n                            d={path}\n                        />\n                    ))}\n                </g>\n            </svg>\n        );\n    }\n\n    componentDidMount() {\n        this._reset();\n    }\n\n    shouldComponentUpdate(newProps: Props, newState: State) {\n        let {x1, y1, x2, y2} = this.props;\n        let {paths} = this.state;\n\n        return (\n            x1 !== newProps.x1 ||\n            x2 !== newProps.x2 ||\n            y1 !== newProps.y1 ||\n            y2 !== newProps.y2 ||\n            paths.length !== newState.paths.length ||\n            paths.some((path, idx) => path !== newState.paths[idx])\n        );\n    }\n\n    componentDidUpdate(prevProps: Props) {\n        let {x1, y1, x2, y2} = this.props;\n\n        if (\n            x1 !== prevProps.x1 ||\n            x2 !== prevProps.x2 ||\n            y1 !== prevProps.y1 ||\n            y2 !== prevProps.y2\n        ) {\n            this._reset();\n        }\n    }\n\n    _reset = () => {\n        let {\n            x1,\n            y1,\n            x2,\n            y2,\n            roughness,\n            stroke,\n            strokeWidth,\n            fill,\n            fillStyle,\n        } = this.props;\n        if (!this._svg) {\n            return;\n        }\n        let rsvg = rough.svg(this._svg);\n        const sline = rsvg.rectangle(x1, y1, x2 - x1, y2 - y1, {\n            roughness,\n            stroke,\n            strokeWidth,\n            fill,\n            fillStyle,\n            fillWeight: 4,\n        });\n        const pathEl = sline.querySelector(\"path\");\n        if (!pathEl) {\n            return;\n        }\n        const paths = (pathEl.getAttribute(\"d\") || \"\")\n            .split(\"M\")\n            .slice(1)\n            .map(v => `M${v}`);\n\n        const pathLengths = paths.map(pathD => {\n            pathEl.setAttribute(\"d\", paths[0]);\n            return pathEl.getTotalLength();\n        });\n        let pathStyle: {[key: string]: string} = {};\n\n        for (let i = 0; i < pathEl.style.length; ++i) {\n            const name = pathEl.style[i];\n            // HACK: TS doesn't support indexing style by string.\n            const value: string = (pathEl.style as any)[pathEl.style[i]];\n            const reactName = name.replace(/-([a-z])/g, g =>\n                g[1].toUpperCase(),\n            );\n            pathStyle[reactName] = value;\n        }\n\n        this.setState({\n            paths,\n            pathLengths,\n            pathStyle,\n        });\n    };\n}\n\nconst lineAnimation = {\n    to: {\n        strokeDashoffset: 0,\n    },\n};\n\nconst scaleAnimation = {\n    from: {\n        transform: \"scaleX(0)\",\n    },\n    to: {\n        transform: \"scaleX(1)\",\n    },\n};\n\nconst styles = StyleSheet.create({\n    animatedStroke: {\n        animationName: lineAnimation,\n        animationTimingFunction: \"linear\",\n        animationFillMode: \"forwards\",\n    },\n    animatedFill: {\n        animationName: scaleAnimation,\n        animationTimingFunction: \"learner\",\n        animationFillMode: \"forwards\",\n    },\n    absoluteOverlay: {\n        overflow: \"visible\",\n        position: \"absolute\",\n        left: 0,\n        top: 0,\n        // Chrome/Safari do not render anything with width/height 0\n        width: 1,\n        height: 1,\n        pointerEvents: \"none\",\n    },\n});\n","import * as React from \"react\";\n\nimport MeasureLineWidths from \"./_MeasureLines\";\nimport RoughRectangle from \"./_RoughRectangle\";\nimport {AnimationStrategy} from \"./AnimationStrategy\";\nimport {\n    AnimationGroup,\n    Animate,\n    ConnectToAnimationGroup,\n} from \"./AnimationGroup\";\n\n/**\n * Define what the highlight looks like.\n */\nexport interface HighlightStyle {\n    /**\n     * Numerical value indicating how rough the drawing is. A rectangle with\n     * the roughness of 0 would be a perfect rectangle.\n     *\n     * There is no upper limit to this value, but a value over 10 is mostly\n     * useless.\n     */\n    roughness: number;\n    /**\n     * String value representing the color used to fill a shape.\n     *\n     * Can be specicied in any of the\n     * [ways to describe color in CSS](https://developer.mozilla.org/en-US/docs/Web/HTML/Applying_color#How_to_describe_a_color).\n     */\n    fill: string;\n}\n\n/**\n * Props for [[RoughHighlight]]\n */\nexport interface RoughHighlightProps {\n    /**\n     * The rules to describe how quickly this component should animate.\n     */\n    animation: AnimationStrategy;\n    children: string;\n    roughStyle: HighlightStyle;\n}\n\ninterface State {\n    triggered: boolean;\n}\n\n/**\n * Connected implementation of [[RoughHighlight]]\n */\nclass _RoughHighlight\n    extends React.Component<\n        RoughHighlightProps & {group: AnimationGroup | null},\n        State\n    >\n    implements Animate {\n    /** @hidden */\n    state: State = {\n        triggered: false,\n    };\n\n    trigger = () => {\n        this.setState({\n            triggered: true,\n        });\n    };\n\n    estimatedDuration: number | null = null;\n\n    componentWillUnmount() {\n        if (this.props.group) {\n            this.props.group.unregister(this);\n        }\n    }\n\n    /** @hidden */\n    render() {\n        const {children, animation, roughStyle, group} = this.props;\n\n        return (\n            <span>\n                <MeasureLineWidths text={children}>\n                    {lines => {\n                        let durations: Array<number>;\n                        let gap: number;\n\n                        let totalLength = lines.reduce(\n                            (memo, line) => memo + line.right - line.left,\n                            0,\n                        );\n\n                        if (animation.animation === \"none\") {\n                            durations = lines.map(() => 0);\n                        } else if (animation.animation === \"duration\") {\n                            gap = Math.min(\n                                100,\n                                (animation.duration / lines.length) * 0.05,\n                            );\n\n                            let animateTime =\n                                animation.duration - gap * (lines.length - 1);\n\n                            durations = lines.map(\n                                line =>\n                                    ((line.right - line.left) / totalLength) *\n                                    animateTime,\n                            );\n                        } else if (animation.animation === \"speed\") {\n                            gap = 100;\n                            durations = lines.map(\n                                line =>\n                                    ((line.right - line.left) * 10) /\n                                    animation.speed,\n                            );\n                        } else {\n                            throw new Error(\"Invalid animation type.\");\n                        }\n\n                        let timeSoFar =\n                            animation.animation === \"none\"\n                                ? 0\n                                : animation.delay;\n\n                        let delays = lines.map((line, i) => {\n                            let myDelay = timeSoFar;\n                            timeSoFar += durations[i] + gap;\n                            return myDelay;\n                        });\n\n                        if (group && !this.state.triggered) {\n                            this.estimatedDuration = timeSoFar;\n                            group.register(this);\n                            return null;\n                        }\n\n                        return (\n                            <>\n                                {lines.map(({left, right, top, bottom}, i) => (\n                                    <RoughRectangle\n                                        key={i}\n                                        x1={left}\n                                        x2={right}\n                                        y1={top}\n                                        y2={bottom}\n                                        roughness={roughStyle.roughness}\n                                        fill={roughStyle.fill}\n                                        fillStyle=\"solid\"\n                                        stroke=\"none\"\n                                        duration={durations[i]}\n                                        delay={delays[i]}\n                                    />\n                                ))}\n                            </>\n                        );\n                    }}\n                </MeasureLineWidths>\n            </span>\n        );\n    }\n}\n\n/**\n * Draw an animated highlight behind some inline text.\n *\n * ![Screen capture](media://RoughHighlight.gif)\n *\n * **Props**: [[RoughHighlightProps]]\n *\n * @noInheritDoc\n */\nexport class RoughHighlight extends React.Component<RoughHighlightProps> {\n    /** @hidden */\n    render() {\n        const {props} = this;\n        return (\n            <ConnectToAnimationGroup>\n                {group => <_RoughHighlight group={group} {...props} />}\n            </ConnectToAnimationGroup>\n        );\n    }\n}\n","import * as React from \"react\";\n\nimport {\n    AnimationGroup,\n    Animate,\n    ConnectToAnimationGroup,\n} from \"./AnimationGroup\";\nimport {AnimationStrategy} from \"./AnimationStrategy\";\nimport InternalLineDrawing from \"./_LineDrawing\";\n\n/**\n * Props for [[AnimatedLineDrawing]]\n */\nexport interface AnimatedLineDrawingProps {\n    /**\n     * If true, do not render a wrapping svg\n     */\n    bare?: boolean;\n\n    /**\n     * A string for hovertext and screenreaders.\n     *\n     * If this animated line should not be visible to screenreaders, pass\n     * null instead.\n     */\n    title: string | null;\n\n    /**\n     * A string describing the line drawing in more detail, for screenreaders.\n     *\n     * Set this property if the line animation is complex and meaningful, and\n     * \"title\" cannot fully explain the line drawing.\n     */\n    desc?: string;\n\n    /**\n     * The rules to describe how quickly this component should animate.\n     */\n    animation: AnimationStrategy;\n\n    /**\n     * Defines the path to be drawn.\n     *\n     * This is the same as the d property on an SVG `<path>` element.\n     * See https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/d\n     */\n    d: string;\n\n    /**\n     * CSS styles for `<path>` elements that will be drawn.\n     *\n     * Keep in mind the following gotchas:\n     *  - [[AnimatedLineDrawing]] animates using stroke-dasharray and\n     *    stroke-dashoffset, so you can't specify those properties here.\n     *  - [[AnimatedLineDrawing]] may render multiple paths for a single\n     *    path you passed in. Specifically, it renders a seperate path for\n     *    every `M` command in the path. This style applies to all these paths.\n     */\n    pathStyle: React.CSSProperties;\n\n    /**\n     * Class applies to the `<svg>` element rendered, if applicable\n     */\n    className?: string;\n\n    /**\n     * Class applied to the `<path>` element this component renders.\n     */\n    pathClassName?: string;\n\n    /**\n     * Percentage delay between segments.\n     *\n     * This is the percentage of the time spent animating that should be\n     * reserved between the path's `M` commands. If 0 (the default), all time\n     * will be spent drawing. If 0.1, 90% of the time will be spent drawing,\n     * and 10% of the time will be spent waiting between segments.\n     */\n    delayRatio?: number;\n}\n\ntype State = {\n    triggered: boolean;\n    width: number;\n    height: number;\n};\n\n/**\n * Connected implementation of [[AnimatedLineDrawing]].\n */\nclass _AnimatedLineDrawing\n    extends React.Component<\n        AnimatedLineDrawingProps & {group: AnimationGroup | null},\n        State\n    >\n    implements Animate {\n    /** @hidden */\n    state: State = {\n        triggered: false,\n        width: 0,\n        height: 0,\n    };\n\n    /** @hidden */\n    componentDidMount() {\n        if (this.props.group) {\n            this.props.group.register(this);\n        }\n    }\n\n    /** @hidden */\n    componentDidUpdate(\n        prevProps: AnimatedLineDrawingProps & {group: AnimationGroup | null},\n    ) {\n        if (this.props.group !== prevProps.group) {\n            if (prevProps.group) {\n                prevProps.group.unregister(this);\n            }\n            if (this.props.group) {\n                this.props.group.register(this);\n            }\n        }\n    }\n\n    /** @hidden */\n    componentWillUnmount() {\n        if (this.props.group) {\n            this.props.group.unregister(this);\n        }\n    }\n\n    trigger = () => {\n        this.setState({\n            triggered: true,\n        });\n    };\n\n    estimatedDuration: number | null = null;\n\n    /** @hidden */\n    static getDerivedStateFromProps(\n        props: AnimatedLineDrawingProps,\n        state: State,\n    ): State {\n        const pathEl = document.createElementNS(\n            \"http://www.w3.org/2000/svg\",\n            \"path\",\n        );\n        const paths = props.d\n            .split(\"M\")\n            .slice(1)\n            .map(p => `M${p}`);\n\n        let tempDiv = document.createElement(\"div\");\n        tempDiv.setAttribute(\n            \"style\",\n            \"position:absolute; visibility:hidden; width:0; height:0\",\n        );\n        document.body.appendChild(tempDiv);\n        let tempSvg = document.createElementNS(\n            \"http://www.w3.org/2000/svg\",\n            \"svg\",\n        );\n        tempDiv.appendChild(tempSvg);\n        tempSvg.appendChild(pathEl);\n        const strokeWidth = parseInt(String(props.pathStyle.strokeWidth)) || 1;\n        const {width, height} = paths.reduce(\n            (memo, pathD) => {\n                pathEl.setAttribute(\"d\", pathD);\n                const bbox = pathEl.getBBox();\n                memo.width = Math.max(\n                    memo.width,\n                    bbox.x + bbox.width + strokeWidth,\n                );\n                memo.height = Math.max(\n                    memo.height,\n                    bbox.y + bbox.height + strokeWidth,\n                );\n                return memo;\n            },\n            {width: 0, height: 0},\n        );\n\n        document.body.removeChild(tempDiv);\n\n        return {...state, width, height};\n    }\n\n    /** @hidden */\n    render() {\n        let {animation, className, delayRatio, title, bare} = this.props;\n        const {width, height} = this.state;\n\n        let duration;\n        let delay;\n        if (animation.animation === \"none\") {\n            duration = 0;\n            delay = 0;\n        } else if (animation.animation === \"duration\") {\n            duration = animation.duration;\n            delay = animation.delay;\n        } else {\n            let x = document.createElementNS(\n                \"http://www.w3.org/2000/svg\",\n                \"path\",\n            );\n            x.setAttribute(\"d\", this.props.d);\n            let len = x.getTotalLength();\n\n            duration = (len * 10) / animation.speed;\n            delay = animation.delay;\n        }\n\n        if (duration !== this.estimatedDuration && this.props.group) {\n            this.estimatedDuration = duration + delay;\n            this.props.group.register(this);\n        }\n\n        if (!this.state.triggered && this.props.group) {\n            return <div className={className} />;\n        }\n        return (\n            <InternalLineDrawing\n                title={title}\n                className={className || \"\"}\n                delay={delay}\n                duration={duration}\n                d={this.props.d}\n                pathStyle={this.props.pathStyle}\n                pathClassName={this.props.pathClassName}\n                width={width}\n                height={height}\n                consistentDirection={true}\n                delayRatio={delayRatio}\n                bare={bare}\n            />\n        );\n    }\n}\n\n/**\n * Animate the stroke of an SVG path.\n *\n * This is generally a block element, but that can be changed by passing in\n * a `className`.\n *\n * **AnimatedLineDrawing** renders an `<svg>` element with a viewport from\n * (0, 0) to the bottom right of the provided path.\n *\n * Assuming a non-empty `d` parameter, the `<svg>` element will have one or\n * more `<path>` children, one for every `M` command.\n *\n * This component animates using the stroke-dasharray/stroke-dashoffset\n * hack described at https://css-tricks.com/svg-line-animation-works\n *\n * ![Screen capture](media://AnimatedLineDrawing.gif)\n *\n * **Props**: [[AnimatedLineDrawingProps]]\n *\n * @noInheritDoc\n */\nexport class AnimatedLineDrawing extends React.Component<\n    AnimatedLineDrawingProps\n> {\n    /** @hidden */\n    render() {\n        const {props} = this;\n\n        return (\n            <ConnectToAnimationGroup>\n                {group => <_AnimatedLineDrawing group={group} {...props} />}\n            </ConnectToAnimationGroup>\n        );\n    }\n}\n","import React, {Component} from \"react\";\nimport {StyleSheet, css} from \"aphrodite\";\n\nimport {AnimationGroup} from \"./AnimationGroup\";\nimport {RoughUnderline, UnderlineStyle} from \"./RoughUnderline\";\nimport {RoughCircledBox, RoughCircledBoxStyle} from \"./RoughCircledBox\";\nimport {AnimationStrategy} from \"./AnimationStrategy\";\nimport {RoughHighlight, HighlightStyle} from \"./RoughHighlight\";\nimport {AnimatedLineDrawing} from \"./AnimatedLineDrawing\";\n\nconst OFF_BLACK = \"#212629\";\nconst KHAN_GREEN_TM = \"#14bf96\";\nconst LOGO_SIZE = 40;\n\nlet fastAnimation: AnimationStrategy = {\n    animation: \"speed\",\n    speed: 5,\n    delay: 200,\n};\n\nlet slowAnimation: AnimationStrategy = {\n    animation: \"speed\",\n    speed: 2,\n    delay: 200,\n};\n\nlet underlineStyle: UnderlineStyle = {\n    roughness: 1,\n    stroke: KHAN_GREEN_TM,\n    strokeWidth: 2,\n    bowing: {\n        bowing: \"inverse\",\n        ratio: 300,\n    },\n    lift: 0,\n};\n\nlet linkStyle: UnderlineStyle = {\n    ...underlineStyle,\n    stroke: \"blue\",\n};\n\nlet roughCircledBoxStyle: RoughCircledBoxStyle = {\n    roughness: 2,\n    stroke: KHAN_GREEN_TM,\n    strokeWidth: 2,\n};\n\nlet highlightStyle: HighlightStyle = {\n    fill: KHAN_GREEN_TM,\n    roughness: 1.5,\n};\n\nconst Logo = () => (\n    <div className={css(styles.logo)}>\n        <svg\n            width={LOGO_SIZE}\n            height={LOGO_SIZE}\n            viewBox=\"0 0 24.710121870040894 23.279998779296875\"\n            style={{overflow: \"visible\"}}\n            aria-hidden={true}\n        >\n            <path\n                fill={KHAN_GREEN_TM}\n                d=\"M2.31,5.8A3.56,3.56,0,0,0,.66,8.6V19.4a3.56,3.56,0,0,0,1.65,2.8L12,27.62a3.75,3.75,0,0,0,3.3,0L25,22.2a3.56,3.56,0,0,0,1.65-2.8V8.6A3.56,3.56,0,0,0,25,5.8L15.31.38a3.75,3.75,0,0,0-3.3,0Z\"\n            />\n        </svg>\n        <AnimatedLineDrawing\n            title=\"Khan Academy logo\"\n            animation={slowAnimation}\n            pathStyle={{\n                stroke: \"white\",\n                fill: \"none\",\n                strokeWidth: 1,\n                strokeLinejoin: \"bevel\",\n                strokeLinecap: \"round\",\n            }}\n            className={css(styles.logoPath)}\n            d=\"M23.61,11.32c-5.38,0-9.4,4.46-9.4,9.93v.23H13.13v-.23c0-5.47-4-9.91-9.42-9.93,0,.34,0,.69,0,1a9.91,9.91,0,0,0,6.4,9.32,10.47,10.47,0,0,0,3.59.64,10.64,10.64,0,0,0,3.62-.64,9.92,9.92,0,0,0,6.39-9.32C23.66,12,23.64,11.66,23.61,11.32ZM10.66,8.74a3,3 0 1,0 6,0a3,3 0 1,0 -6,0\"\n        />\n    </div>\n);\n\nconst MyLink = ({\n    href,\n    children,\n}: {\n    href: string;\n    children: React.ReactChild;\n}) => (\n    <a href={href} className={css(styles.link)}>\n        <RoughUnderline animation={fastAnimation} roughStyle={linkStyle}>\n            {children}\n        </RoughUnderline>\n    </a>\n);\n\nconst MyHighlight = ({children}: {children: string}) => (\n    <RoughHighlight roughStyle={highlightStyle} animation={fastAnimation}>\n        {children}\n    </RoughHighlight>\n);\n\nconst MyUnderline = ({children}: {children: string}) => (\n    <RoughUnderline animation={fastAnimation} roughStyle={underlineStyle}>\n        {children}\n    </RoughUnderline>\n);\n\nclass App extends Component<{}, {key: number | undefined}> {\n    state = {\n        key: undefined,\n    };\n\n    render() {\n        return (\n            <AnimationGroup key={this.state.key}>\n                <div className={css(styles.pageContainer)}>\n                    <h1>\n                        <Logo />\n                        Kh\n                        <MyHighlight>annotations</MyHighlight>\n                    </h1>\n                    <p className={css(styles.paragraph)}>\n                        Khannotations is a React library for{\" \"}\n                        <MyUnderline>rough</MyUnderline>,{\" \"}\n                        <RoughUnderline\n                            animation={fastAnimation}\n                            roughStyle={underlineStyle}\n                        >\n                            animated\n                        </RoughUnderline>\n                        , annotations.\n                    </p>\n                    <p className={css(styles.paragraph)}>\n                        It uses{\" \"}\n                        <MyLink href=\"https://roughjs.com/\">RoughJS</MyLink> and\n                        is made by{\" \"}\n                        <MyLink href=\"https://www.khanacademy.org/\">\n                            Khan Academy\n                        </MyLink>\n                        .\n                    </p>\n                    <div className={css(styles.moreOptions)}>\n                        <a href=\"javascript:void(0)\" onClick={this._reset}>\n                            Run demo again\n                        </a>{\" \"}\n                        &middot;{\" \"}\n                        <RoughCircledBox\n                            roughStyle={roughCircledBoxStyle}\n                            delay={200}\n                        >\n                            <a href=\"http://khan.github.io/khannotations/api\">\n                                Continue to docs &raquo;\n                            </a>\n                        </RoughCircledBox>\n                    </div>\n                </div>\n            </AnimationGroup>\n        );\n    }\n\n    _reset = () => {\n        this.setState({\n            key: Math.random(),\n        });\n    };\n}\n\nexport default App;\n\nconst styles = StyleSheet.create({\n    pageContainer: {\n        maxWidth: 768,\n        margin: \"auto\",\n        fontFamily:\n            '\"Comic Sans MS\", \"Comic Sans\", \"Chalkboard\", \"ChalkboardSE-Regular\", cursive, sans-serif',\n        color: OFF_BLACK,\n        position: \"relative\",\n        paddingBottom: 40,\n    },\n    paragraph: {\n        fontSize: 20,\n        lineHeight: 1.3,\n    },\n    logoPath: {\n        display: \"inline-block\",\n        position: \"absolute\",\n        width: LOGO_SIZE,\n        height: LOGO_SIZE,\n        marginBottom: -16,\n        left: 0,\n        top: 0,\n    },\n    logo: {\n        display: \"inline-block\",\n        marginRight: 12,\n        position: \"relative\",\n        width: LOGO_SIZE,\n        height: LOGO_SIZE,\n        verticalAlign: -4,\n    },\n    moreOptions: {\n        marginTop: 40,\n    },\n    link: {\n        color: \"blue\",\n        textDecoration: \"none\",\n        [\":hover\"]: {\n            color: OFF_BLACK,\n        },\n    },\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./_App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}